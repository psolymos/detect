[{"path":"https://peter.solymos.org/detec/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Solymos. Maintainer.","code":""},{"path":"https://peter.solymos.org/detec/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Solymos P, Moreno M, Lele SR (2024). detect: Analyzing Wildlife Data Detection Error. R package version 0.5-0, https://github.com/psolymos/detect.","code":"@Manual{,   title = {detect: Analyzing Wildlife Data with Detection Error},   author = {Peter Solymos and Monica Moreno and Subhash R. Lele},   year = {2024},   note = {R package version 0.5-0},   url = {https://github.com/psolymos/detect}, }"},{"path":"https://peter.solymos.org/detec/index.html","id":"detect-analyzing-wildlife-data-with-detection-error","dir":"","previous_headings":"","what":"detect: Analyzing Wildlife Data with Detection Error","title":"detect: Analyzing Wildlife Data with Detection Error","text":"R package implements models analyze site occupancy count data models detection error. package development supported Alberta Biodiversity Monitoring Institute Boreal Avian Modelling (BAM) Project. Main functions: svocc: single visit occupancy model (Lele et al. 2012, Moreno et al. 2010). svabu: single visit Poisson Negative Binomial abundance model based conditional maximum likelihood (Solymos et al. 2012, Denes et al. 2016, Solymos & Lele 2016). cmulti: conditional multinomial maximum likelihood estimation removal (point count) distance sampling, efficient flexible setup varying methodologies (Solymos et al. 2013, Solymos et al. 2018).","code":""},{"path":"https://peter.solymos.org/detec/index.html","id":"versions","dir":"","previous_headings":"","what":"Versions","title":"detect: Analyzing Wildlife Data with Detection Error","text":"Install CRAN release version (recommended): Development version: User visible changes package listed NEWS file. Use issue tracker report problem.","code":"install.packages(\"detect\") install.packages(\"detect\", repos = \"https://psolymos.r-universe.dev\")"},{"path":"https://peter.solymos.org/detec/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"detect: Analyzing Wildlife Data with Detection Error","text":"Denes, F., Solymos, P., Lele, S. R., Silveira, L. & Beissinger, S. 2017. Biome scale signatures land use change raptor abundance: insights single-visit detection-based models. Journal Applied Ecology, 54, 1268–1278. DOI: 10.1111/1365-2664.12818 Lele, S.R., Moreno, M. Bayne, E. 2012. Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22–31. DOI: 10.1093/jpe/rtr042 Moreno, M. Lele, S. R. 2010. Improved estimation site occupancy using penalized likelihood. Ecology, 91, 341–346. DOI: 10.1890/09-1073.1 Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197–205. DOI: 10.1002/env.1149 Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047–1058. DOI: 10.1111/2041-210X.12106 Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196–205. DOI: 10.1111/2041-210X.12432 Solymos, P., Matsuoka, S. M., Cumming, S. G., Stralberg, D., Fontaine, P., Schmiegelow, F. K. ., Song, S. J., Bayne, E. M., 2018. Evaluating time-removal models estimating availability boreal birds point-count surveys: sample size requirements model complexity. Condor, 120, 765–786. DOI: 10.1650/CONDOR-18-32.1 Supporting info, including tutorial QPAD method.","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":null,"dir":"Reference","previous_headings":"","what":"AUC ROC plot for fitted models — AUC","title":"AUC ROC plot for fitted models — AUC","text":"Area receiver-operator (ROC) curve (AUC), ROC plot methods fitted models.","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AUC ROC plot for fitted models — AUC","text":"","code":"AUC(object, ...) rocplot(x, ...)"},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AUC ROC plot for fitted models — AUC","text":"object, x fitted model object ... arguments","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AUC ROC plot for fitted models — AUC","text":"AUC returns AUC value model, data frame values models. rocplot returns values used plot invisibly, side effect draws graph.","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AUC ROC plot for fitted models — AUC","text":"Peter Solymos Monica Moreno","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Do bootstrap and extract bootstrap results — bootstrap","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"bootstrap extract bootstrap results.","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"","code":"bootstrap(object, ...) extractBOOT(object, ...)"},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"object fitted model object ... arguments","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"bootstrap performs bootstrap. extractBOOT used extract bootstrap results.","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Conditional Multinomial Maximum Likelihood Estimation different sampling methodologies.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"","code":"cmulti(formula, data, type = c(\"rem\", \"mix\", \"dis\", \"fmix\"),     inits = NULL, method = \"Nelder-Mead\", ...) cmulti.fit(Y, D, X=NULL, type=c(\"rem\", \"mix\", \"dis\", \"fmix\"),     inits=NULL, method=\"Nelder-Mead\", ...)  cmulti2.fit(Y, D1, D2, X1=NULL, X2=NULL,     inits=NULL, method=\"Nelder-Mead\", ...)  # S3 method for cmulti fitted(object, ...) # S3 method for cmulti model.frame(formula, ...) # S3 method for cmulti model.matrix(object, ...) # S3 method for cmulti predict(object, newdata = NULL,     type = c(\"link\", \"response\"), ...)"},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"formula formula, LHS takes 2 matrices form Y | D, RHS either 1 covariates, see Examples. data data. type character, one \"rem\" (removal sampling, homogeneous singing rates), \"mix\" \"fmix\" (removal sampling, heterogeneous singing rates, \"mix\" implies 'phi' constant 'c' can vary; \"fmix\" implies 'c' constant 'phi' can vary), \"dis\" (distance sampling, half-normal detection function point counts, circular area). predict method type prediction required; default scale linear predictors; alternative \"response\" scale response variable. Y contains cell counts. cmulti.fit requires Y matrix (observations x intervals), dimensions pattern NAs must match D. cmulti2.fit requires Y 3-dimensional array (observations x time intervals x distance intervals), dimensions pattern NAs must match D1 D2. D, D1, D2 design matrices, describe interval endpoints sampling methodology, dimensions must match dimensions Y. X, X1, X2 design matrices, X matrix covariates removal/distance sampling parameters. X1 matrix covariates removal, X2 matrix covariates distance sampling parameters. inits optional initial values. method method optim. object fitted model object. newdata optionally, data frame look variables predict. omitted, fitted linear predictors used. ... additional options optim.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Conditional Multinomial Maximum Likelihood Estimation different sampling methodologies.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"object class 'cmulti'.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047--1058. <doi:10.1111/2041-210X.12106> Solymos, P., Matsuoka, S. M., Cumming, S. G., Stralberg, D., Fontaine, P., Schmiegelow, F. K. ., Song, S. J., Bayne, E. M., 2018. Evaluating time-removal models estimating availability boreal birds point-count surveys: sample size requirements model complexity. Condor, 120, 765--786. <doi:10.1650/CONDOR-18-32.1> Supporting info, including tutorial QPAD method: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"","code":"simfun1 <- function(n = 10, phi = 0.1, c=1, tau=0.8, type=\"rem\") {     if (type==\"dis\") {         Dparts <- matrix(c(0.5, 1, NA,                       0.5, 1, Inf,                       1, Inf, NA), 3, 3, byrow=TRUE)         D <- Dparts[sample.int(3, n, replace=TRUE),]         CP <- 1-exp(-(D/tau)^2)     } else {         Dparts <- matrix(c(5, 10, NA,                       3, 5, 10,                       3, 5, NA), 3, 3, byrow=TRUE)         D <- Dparts[sample.int(3, n, replace=TRUE),]         CP <- 1-c*exp(-D*phi)     }     k <- ncol(D)     P <- CP - cbind(0, CP[, -k, drop=FALSE])     Psum <- rowSums(P, na.rm=TRUE)     PPsum <- P / Psum     Pok <- !is.na(PPsum)     N <- rpois(n, 10)     Y <- matrix(NA, ncol(PPsum), nrow(PPsum))     Ypre <- sapply(1:n, function(i) rmultinom(1, N, PPsum[i,Pok[i,]]))     Y[t(Pok)] <- unlist(Ypre)     Y <- t(Y)     list(Y=Y, D=D) }  n <- 200 x <- rnorm(n) X <- cbind(1, x)  ## removal, constant vv <- simfun1(n=n, phi=exp(-1.5)) m1 <- cmulti(vv$Y | vv$D ~ 1, type=\"rem\") coef(m1) #> log.phi_(Intercept)  #>           -1.428654  ## mixture, constant (mix and fmix are identical) vv <- simfun1(n=n, phi=exp(-1.5), c=plogis(0.8)) m2 <- cmulti(vv$Y | vv$D ~ 1, type=\"mix\") coef(m2) #>             log.phi logit.c_(Intercept)  #>          -1.5307374           0.7306286  m2f <- cmulti(vv$Y | vv$D ~ 1, type=\"fmix\") coef(m2f) #> log.phi_(Intercept)             logit.c  #>          -1.5307374           0.7306286  ## dist, constant vv <- simfun1(n=n, tau=exp(-0.2), type=\"dis\") m3 <- cmulti(vv$Y | vv$D ~ 1, type=\"dis\") coef(m3) #> log.tau_(Intercept)  #>          -0.1983656   ## removal, not constant log.phi <- crossprod(t(X), c(-2,-1)) vv <- simfun1(n=n, phi=exp(cbind(log.phi, log.phi, log.phi))) m1 <- cmulti(vv$Y | vv$D ~ x, type=\"rem\") coef(m1) #> log.phi_(Intercept)           log.phi_x  #>           -1.948791           -0.989509  ## mixture, fixed phi, varying c logit.c <- crossprod(t(X), c(-2,1)) vv <- simfun1(n=n, phi=exp(-1.5), c=plogis(cbind(logit.c, logit.c, logit.c))) m2 <- cmulti(vv$Y | vv$D ~ x, type=\"mix\") coef(m2) #>             log.phi logit.c_(Intercept)           logit.c_x  #>           -1.178470           -1.921110            1.473748  ## mixture, varying phi, fixed c log.phi <- crossprod(t(X), c(-2,-1)) vv <- simfun1(n=n, phi=exp(cbind(log.phi, log.phi, log.phi)), c=plogis(0.8)) m2f <- cmulti(vv$Y | vv$D ~ x, type=\"fmix\") coef(m2f) #> log.phi_(Intercept)           log.phi_x             logit.c  #>           -2.121427           -1.205123            1.066365  ## dist, not constant log.tau <- crossprod(t(X), c(-0.5,-0.2)) vv <- simfun1(n=n, tau=exp(cbind(log.tau, log.tau, log.tau)), type=\"dis\") m3 <- cmulti(vv$Y | vv$D ~ x, type=\"dis\") coef(m3) #> log.tau_(Intercept)           log.tau_x  #>          -0.5201389          -0.1978845   summary(m3) #>  #> Call: #> cmulti(formula = vv$Y | vv$D ~ x, type = \"dis\") #>  #> Distance Sampling (half-normal, circular area) #> Conditional Maximum Likelihood estimates #>  #> Coefficients: #>                     Estimate Std. Error z value Pr(>|z|)     #> log.tau_(Intercept) -0.52014    0.01673  -31.10   <2e-16 *** #> log.tau_x           -0.19788    0.01673  -11.83   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Log-likelihood:  -331  #> BIC = 672.6  #>  coef(m3) #> log.tau_(Intercept)           log.tau_x  #>          -0.5201389          -0.1978845  vcov(m3) #>                     log.tau_(Intercept)     log.tau_x #> log.tau_(Intercept)        2.797469e-04 -2.232051e-05 #> log.tau_x                 -2.232051e-05  2.799016e-04 AIC(m3) #> [1] 665.9889 confint(m3) #>                          2.5 %     97.5 % #> log.tau_(Intercept) -0.5529205 -0.4873573 #> log.tau_x           -0.2306752 -0.1650938 logLik(m3) #> 'log Lik.' -330.9945 (df=2)  ## fitted values plot(exp(log.tau), fitted(m3))   ## prediction for new locations (type = 'rem') ndf <- data.frame(x=seq(-1, 1, by=0.1)) summary(predict(m1, newdata=ndf, type=\"link\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -2.9383 -2.4435 -1.9488 -1.9488 -1.4540 -0.9593  summary(pr1 <- predict(m1, newdata=ndf, type=\"response\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.05296 0.08685 0.14245 0.16942 0.23363 0.38317  ## turing singing rates into probabilities requires total duration ## 5 minutes used here psing <- 1-exp(-5*pr1) plot(ndf$x, psing, type=\"l\", ylim=c(0,1))   ## prediction for new locations (type = 'dis') summary(predict(m3, newdata=ndf, type=\"link\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -0.7180 -0.6191 -0.5201 -0.5201 -0.4212 -0.3223  summary(pr3 <- predict(m3, newdata=ndf, type=\"response\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.4877  0.5384  0.5944  0.5987  0.6563  0.7245  ## turing EDR into probabilities requires finite truncation distances ## r=0.5 used here (50 m) r <- 0.5 pdet <- pr3^2*(1-exp(-r^2/pr3^2))/r^2 plot(ndf$x, pdet, type=\"l\", ylim=c(0,1))   ## joint removal-distance estimation ## is not different from 2 orthogonal estimations  simfun12 <- function(n = 10, phi = 0.1, c=1, tau=0.8, type=\"rem\") {     Flat <- function(x, DIM, dur=TRUE) {         x <- array(x, DIM)         if (!dur) {             x <- aperm(x,c(1,3,2))         }         dim(x) <- c(DIM[1], DIM[2]*DIM[3])         x     }     Dparts1 <- matrix(c(5, 10, NA,                         3, 5, 10,                         3, 5, NA), 3, 3, byrow=TRUE)     D1 <- Dparts1[sample.int(3, n, replace=TRUE),]     CP1 <- 1-c*exp(-D1*phi)     Dparts2 <- matrix(c(0.5, 1, NA,                         0.5, 1, Inf,                         1, Inf, NA), 3, 3, byrow=TRUE)     D2 <- Dparts2[sample.int(3, n, replace=TRUE),]     CP2 <- 1-exp(-(D2/tau)^2)     k1 <- ncol(D1)     k2 <- ncol(D2)     DIM <- c(n, k1, k2)     P1 <- CP1 - cbind(0, CP1[, -k1, drop=FALSE])     P2 <- CP2 - cbind(0, CP2[, -k2, drop=FALSE])     Psum1 <- rowSums(P1, na.rm=TRUE)     Psum2 <- rowSums(P2, na.rm=TRUE)     Pflat <- Flat(P1, DIM, dur=TRUE) * Flat(P2, DIM, dur=FALSE)     PsumFlat <- Psum1 * Psum2     PPsumFlat <- Pflat / PsumFlat     PokFlat <- !is.na(PPsumFlat)     N <- rpois(n, 10)     Yflat <- matrix(NA, ncol(PPsumFlat), nrow(PPsumFlat))     YpreFlat <- sapply(1:n, function(i) rmultinom(1, N, PPsumFlat[i,PokFlat[i,]]))     Yflat[t(PokFlat)] <- unlist(YpreFlat)     Yflat <- t(Yflat)     Y <- array(Yflat, DIM)     k1 <- dim(Y)[2]     k2 <- dim(Y)[3]     Y1 <- t(sapply(1:n, function(i) {         count <- rowSums(Y[i,,], na.rm=TRUE)         nas <- rowSums(is.na(Y[i,,]))         count[nas == k2] <- NA         count     }))     Y2 <- t(sapply(1:n, function(i) {         count <- colSums(Y[i,,], na.rm=TRUE)         nas <- colSums(is.na(Y[i,,]))         count[nas == k2] <- NA         count     }))     list(Y=Y, D1=D1, D2=D2, Y1=Y1, Y2=Y2) }  ## removal and distance, constant vv <- simfun12(n=n, phi=exp(-1.5), tau=exp(-0.2)) res <- cmulti2.fit(vv$Y, vv$D1, vv$D2) res1 <- cmulti.fit(vv$Y1, vv$D1, NULL, \"rem\") res2 <- cmulti.fit(vv$Y2, vv$D2, NULL, \"dis\") ## points estimates are identical cbind(res$coef, c(res1$coef, res2$coef)) #>            [,1]       [,2] #> [1,] -1.5585857 -1.5585857 #> [2,] -0.1938484 -0.1938484 ## standard errors are identical cbind(sqrt(diag(res$vcov)),     c(sqrt(diag(res1$vcov)),sqrt(diag(res2$vcov)))) #>            [,1]       [,2] #> [1,] 0.05277396 0.05277396 #> [2,] 0.01598005 0.01598005  ## removal and distance, not constant vv <- simfun12(n=n,     phi=exp(cbind(log.phi, log.phi, log.phi)),     tau=exp(cbind(log.tau, log.tau, log.tau))) res <- cmulti2.fit(vv$Y, vv$D1, vv$D2, X1=X, X2=X) res1 <- cmulti.fit(vv$Y1, vv$D1, X, \"rem\") res2 <- cmulti.fit(vv$Y2, vv$D2, X, \"dis\")  ## points estimates are identical cbind(res$coef, c(res1$coef, res2$coef)) #>            [,1]       [,2] #> [1,] -2.0066423 -2.0068100 #> [2,] -1.0487341 -1.0487368 #> [3,] -0.5196571 -0.5196118 #> [4,] -0.1817182 -0.1817405 ## standard errors are identical cbind(sqrt(diag(res$vcov)),     c(sqrt(diag(res1$vcov)),sqrt(diag(res2$vcov)))) #>            [,1]       [,2] #> [1,] 0.09184894 0.09186849 #> [2,] 0.08071062 0.08072127 #> [3,] 0.01472931 0.01472987 #> [4,] 0.01473121 0.01473181"},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"Conversion truncated unlimited effective detection distance (EDR).","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"","code":"convertEDR(edr, r, truncated=FALSE)"},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"edr effective detection distance. units r. r truncation distance (radius point count). units edr. truncated logical, see Details.","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"truncated = FALSE means edr unlimited EDR, function returns truncated EDR given r. truncated = TRUE means edr truncated EDR given r, function returns unlimited EDR.","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"numeric vector converted EDR values.","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"Matsuoka, S. M., Bayne, E. M., Solymos, P., Fontaine, P., Cumming, S. G., Schmiegelow, F. K. ., & Song, S. ., 2012. Using binomial distance-sampling models estimate effective detection radius point-counts surveys across boreal Canada. Auk, 129, 268--282. <doi:10.1525/auk.2012.11190> Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047--1058. <doi:10.1111/2041-210X.12106> Supporting info, including tutorial paper: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"","code":"convertEDR(1, 0.5, truncated=FALSE) #> [1] 0.4703182 ## should be close to 1 convertEDR(convertEDR(1, 0.5, truncated=FALSE), 0.5, truncated=TRUE) #> [1] 1.000002"},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated example for abundance model — databu","title":"Simulated example for abundance model — databu","text":"Simulated example abundance model, see code .","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated example for abundance model — databu","text":"","code":"data(databu)"},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated example for abundance model — databu","text":"data frame 1000 observations following 11 variables. N true counts Y observed counts x1 random variables used covariates x2 random variables used covariates x3 random variables used covariates x4 random variables used covariates x5 random variables used covariates x6 random variables used covariates p probability detection lambda mean linear predictor occupancy phi zero inflation probabilities","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated example for abundance model — databu","text":"simulated example corresponds Binomial - ZIP model implemented function svabu.","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated example for abundance model — databu","text":"Simulated example.","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated example for abundance model — databu","text":"Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197--205. <doi:10.1002/env.1149>","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated example for abundance model — databu","text":"","code":"data(databu) str(databu) #> 'data.frame':\t1000 obs. of  12 variables: #>  $ N     : num  8 12 3 3 0 0 11 8 9 5 ... #>  $ Y     : num  7 2 3 2 0 0 0 8 6 4 ... #>  $ x1    : num  0.114 0.622 0.609 0.623 0.861 ... #>  $ x2    : num  0.985 -1.225 0.71 -0.109 1.783 ... #>  $ x3    : num  0.927 -0.586 -0.828 -0.568 -0.521 ... #>  $ x4    : num  -0.6699 0.4302 -0.0794 0.2769 -0.0882 ... #>  $ x5    : num  1 1 0 0 1 0 1 1 1 0 ... #>  $ x6    : num  0 0 1 0 1 0 1 1 1 1 ... #>  $ p     : num  0.922 0.125 0.918 0.686 0.983 ... #>  $ lambda: num  11.12 7.41 4.54 4.49 6.12 ... #>  $ A     : num  1 1 1 1 0 0 1 1 1 1 ... #>  $ phi   : num  0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 ... if (FALSE) { ## simulation n <- 1000 set.seed(1234) x1 <- runif(n,0,1) x2 <- rnorm(n,0,1) x3 <- runif(n,-1,1) x4 <- runif(n,-1,1) x5 <- rbinom(n,1,0.6) x6 <- rbinom(n,1,0.4) x7 <- rnorm(n,0,1) X <- model.matrix(~ x1 + x5) Z <- model.matrix(~ x2 + x5) Q <- model.matrix(~ x7) beta <- c(2,-0.8,0.5) theta <- c(1, 2, -0.5) phi <- 0.3 p <- drop(binomial(\"logit\")$linkinv(Z %*% theta)) lambda <- drop(exp(X %*% beta)) A <- rbinom(n, 1, 1-phi) N <- rpois(n, lambda * A) Y <- rbinom(n, N, p) databu <- data.frame(N=N, Y=Y, x1, x2, x3, x4, x5, x6, p=p, lambda=lambda, A, phi) }"},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated example for occupancy model — datocc","title":"Simulated example for occupancy model — datocc","text":"Simulated example occupancy model, see code .","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated example for occupancy model — datocc","text":"","code":"data(datocc)"},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated example for occupancy model — datocc","text":"data frame 1000 observations following 6 variables. Y true occupancy W observations x1 random variables used covariates x2 random variables used covariates x3 random variables used covariates x4 random variables used covariates p.occ probability occurrence p.det probability detection","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated example for occupancy model — datocc","text":"simulated example corresponds ZI Binomial model implemented function svocc.","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated example for occupancy model — datocc","text":"Simulated example.","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated example for occupancy model — datocc","text":"Lele, S.R., Moreno, M. Bayne, E. (2012) Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22--31. <doi:10.1093/jpe/rtr042>","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated example for occupancy model — datocc","text":"","code":"data(datocc) str(datocc) #> 'data.frame':\t1000 obs. of  8 variables: #>  $ Y    : num  1 1 1 1 1 1 0 0 0 1 ... #>  $ W    : num  1 0 0 0 1 1 0 0 0 1 ... #>  $ x1   : num  -0.773 0.245 0.219 0.247 0.722 ... #>  $ x2   : Factor w/ 2 levels \"0\",\"1\": 2 1 1 1 2 1 1 1 2 2 ... #>  $ x3   : num  -1.205 0.301 -1.539 0.635 0.703 ... #>  $ x4   : num  -0.9738 -0.0996 -0.1107 1.1922 -1.6559 ... #>  $ p.occ: num  0.71 0.872 0.869 0.873 0.927 ... #>  $ p.det: num  0.605 0.591 0.457 0.615 0.562 ... if (FALSE) { ## simulation n <- 1000 set.seed(1234) x1 <- runif(n, -1, 1) x2 <- as.factor(rbinom(n, 1, 0.5)) x3 <- rnorm(n) x4 <- rnorm(n) beta <- c(0.6, 0.5) theta <- c(0.4, -0.5, 0.3) X <- model.matrix(~ x1) Z <- model.matrix(~ x1 + x3) mu <- drop(X %*% beta) nu <- drop(Z %*% theta) p.occ <- binomial(\"cloglog\")$linkinv(mu) p.det <- binomial(\"logit\")$linkinv(nu) Y <- rbinom(n, 1, p.occ) W <- rbinom(n, 1, Y * p.det) datocc <- data.frame(Y, W, x1, x2, x3, x4, p.occ, p.det) }"},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyzing Wildlife Data with Detection Error — detect-package","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"Models analyzing site occupancy count data models   detection error, including single-visit based models,   conditional distance sampling time-removal models.   Package development supported   Alberta Biodiversity Monitoring Institute   Boreal Avian Modelling Project.","code":""},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"svocc: single visit occupancy model (Lele et al. 2012, Moreno et al. 2010). svabu: single visit abundance model based conditional maximum likelihood (Solymos et al. 2012, Solymos Lele 2016, Denes et al. 2016). cmulti: conditional multinomial maximum likelihood estimation removal (point count) distance sampling, efficient flexible setup varying methodologies (Solymos et al. 2013, Solymos et al. 2018).","code":""},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"Peter Solymos, Monica Moreno, Subhash R Lele Maintainer: Peter Solymos <solymos@ualberta.ca>","code":""},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"Denes, F., Solymos, P., Lele, S. R., Silveira, L. & Beissinger, S. 2017. Biome scale signatures land use change raptor abundance: insights single-visit detection-based models. Journal Applied Ecology, 54, 1268--1278. <doi:10.1111/1365-2664.12818> Lele, S.R., Moreno, M. Bayne, E. 2012. Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22--31. <doi:10.1093/jpe/rtr042> Moreno, M. Lele, S. R. 2010. Improved estimation site occupancy using penalized likelihood. Ecology, 91, 341--346. <doi:10.1890/09-1073.1> Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197--205. <doi:10.1002/env.1149> Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047--1058. <doi:10.1111/2041-210X.12106> Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196--205. <doi:10.1111/2041-210X.12432> Solymos, P., Matsuoka, S. M., Cumming, S. G., Stralberg, D., Fontaine, P., Schmiegelow, F. K. ., Song, S. J., Bayne, E. M., 2018. Evaluating time-removal models estimating availability boreal birds point-count surveys: sample size requirements model complexity. Condor, 120, 765--786. <doi:10.1650/CONDOR-18-32.1> Supporting info, including tutorial QPAD method: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical bootstrap indices — hbootindex","title":"Hierarchical bootstrap indices — hbootindex","text":"Generates hierarchical bootstrap indices.","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical bootstrap indices — hbootindex","text":"","code":"hbootindex(groups, strata, B = 199)"},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical bootstrap indices — hbootindex","text":"groups group membership vector. strata strata, optional. B number bootstrap iterations.","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hierarchical bootstrap indices — hbootindex","text":"Resampling replacement weights proportional number  observations group level (unique values groups). Values groups within levels (unique values) strata resampled independently strata levels.","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical bootstrap indices — hbootindex","text":"matrix bootstrapped indices, number columns B + 1. column resample without  replacement (random subsets can selected without reshuffling). elements contain indices according rules described Details section (also randomly reshuffled).","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hierarchical bootstrap indices — hbootindex","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical bootstrap indices — hbootindex","text":"","code":"## equal group sizes groups <- rep(1:4, each=5) strata <- rep(1:2, each=10) hbootindex(groups, strata, 3) #>       [,1] [,2] [,3] [,4] #>  [1,]    1   13    6   14 #>  [2,]   19   18   16   18 #>  [3,]   18    4   11   17 #>  [4,]    5   13    4   19 #>  [5,]    6   18   20    9 #>  [6,]   11    4    1   10 #>  [7,]   17    6   18   10 #>  [8,]   16    9   18   15 #>  [9,]    4    9    1    5 #> [10,]   12   19   15   15 #> [11,]   13   13   14   10 #> [12,]   20   14    4   16 #> [13,]   10    1    2    7 #> [14,]    2    3    7   10 #> [15,]   14    4    1   17 #> [16,]    7   17   18    9 #> [17,]    9    4   18   19 #> [18,]    8   18    6   16 #> [19,]    3   13    8    2 #> [20,]   15    6   19    1  ## unequal group sizes groups <- groups[-c(5,9,10,11)] strata <- strata[-c(5,9,10,11)] hbootindex(groups, strata, 3) #>       [,1] [,2] [,3] [,4] #>  [1,]   16    3    6   16 #>  [2,]    3    3    7    1 #>  [3,]    5    4    9   16 #>  [4,]    2    4    3    2 #>  [5,]    9    7   14    6 #>  [6,]   14   15   15    1 #>  [7,]   13    1   12    9 #>  [8,]    7   14    8   12 #>  [9,]    1   10   16    2 #> [10,]   11   12    8    5 #> [11,]   10   10    4   11 #> [12,]    4   14    2   10 #> [13,]   12    9    7    6 #> [14,]    6    4   16   13 #> [15,]   15    9    4   12 #> [16,]    8   16   15   11"},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions — cmulti.fit0","title":"Internal functions — cmulti.fit0","text":"Internal functions, intended use .","code":""},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions — cmulti.fit0","text":"","code":"cmulti.fit0(Y, D, type=c(\"rem\", \"mix\", \"dis\", \"fmix\"),     interval=c(-25, 25), ...) drop.scope.svisit(terms1, terms2, model = c(\"sta\", \"det\"))"},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions — cmulti.fit0","text":"Y contains cell counts. See cmulti.fit. D design matrix, describe interval endpoints sampling methodology, dimensions must match dimensions Y. See cmulti.fit. type character, one \"rem\" (removal sampling, homogeneous singing rates), \"mix\" \"fmix\" (removal sampling, heterogeneous singing rates), \"dis\" (distance sampling, half-normal detection function point counts, circular area). See cmulti.fit. interval interval used optimize. terms1 terms formula upper/lower scope. See drop.scope. model character, type model considered.","code":""},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal functions — cmulti.fit0","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":null,"dir":"Reference","previous_headings":"","what":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"Load BAM QPAD parameter estimates support functions.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"","code":"load_BAM_QPAD(version)"},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"version version BAM QPAD estimates. List selection provided missing.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"load_BAM_QPAD function 'detect' package deprecated. Use load_BAM_QPAD function 'QPAD' package instead. See https://github.com/psolymos/QPAD information.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"returns message.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047--1058. <doi:10.1111/2041-210X.12106> Supporting info, including tutorial paper: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":null,"dir":"Reference","previous_headings":"","what":"Ovenbird abundances — oven","title":"Ovenbird abundances — oven","text":"Ovenbird abundances BBS","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ovenbird abundances — oven","text":"","code":"data(oven)"},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ovenbird abundances — oven","text":"data frame 891 observations following 11 variables. count observations route route id stop stop id within route pforest proportion forest pdecid proportion deciduous forest pagri proportion agricultural areas long longitude lat latitude observ observer, factor levels ARS DW RDW SVW julian Julian day timeday time day","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ovenbird abundances — oven","text":"BBS, Erin Bayne (Univ. Alberta), unpublished data set used Solymos et al. 2012.","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ovenbird abundances — oven","text":"Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197--205. <doi:10.1002/env.1149>","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ovenbird abundances — oven","text":"","code":"data(oven) str(oven) #> 'data.frame':\t891 obs. of  11 variables: #>  $ count  : int  1 0 0 1 0 0 0 0 0 0 ... #>  $ route  : int  2 2 2 2 2 2 2 2 2 2 ... #>  $ stop   : int  2 4 6 8 10 12 14 16 18 20 ... #>  $ pforest: num  0.947 0.903 0.814 0.89 0.542 ... #>  $ pdecid : num  0.575 0.562 0.549 0.679 0.344 ... #>  $ pagri  : num  0 0 0 0 0.414 ... #>  $ long   : num  609343 608556 607738 607680 607944 ... #>  $ lat    : num  5949071 5947735 5946301 5944720 5943088 ... #>  $ observ : Factor w/ 4 levels \"ARS\",\"DW\",\"RDW\",..: 4 4 4 4 4 4 4 4 4 4 ... #>  $ julian : int  181 181 181 181 181 181 181 181 181 181 ... #>  $ timeday: int  2 4 6 8 10 12 14 16 18 20 ..."},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":null,"dir":"Reference","previous_headings":"","what":"Single visit N-mixture abundance models — svabu","title":"Single visit N-mixture abundance models — svabu","text":"Binomial-Poisson, Binomial-NegBin, Binomial-ZIP, Binomial-ZINB models single visit.","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single visit N-mixture abundance models — svabu","text":"","code":"svabu(formula, data, zeroinfl = TRUE, area = 1, N.max = NULL,     inits, link.det = \"logit\", link.zif = \"logit\",     model = TRUE, x = FALSE, distr = c(\"P\", \"NB\"), ...)  svabu.fit(Y, X, Z, Q = NULL, zeroinfl = TRUE, area = 1, N.max = NULL,     inits, link.det = \"logit\", link.zif = \"logit\", ...) svabu_nb.fit(Y, X, Z, Q = NULL, zeroinfl = TRUE, area = 1, N.max = NULL,     inits, link.det = \"logit\", link.zif = \"logit\", ...)  zif(x) is.present(object, ...) predictMCMC(object, ...) svabu.step(object, model, trace = 1, steps = 1000,     criter = c(\"AIC\", \"BIC\"), test = FALSE, k = 2, control, ...)"},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single visit N-mixture abundance models — svabu","text":"formula formula form y ~ x | z, y vector observations, x set covariates occurrence model, z set covariates detection model. x can expanded x1 + zif(x2) terms nonzero count data part (x1) zero inflation component (zif(x2)) using zif special. Y, X, Z, Q vector observation, design matrix abundance model, design matrix detection design matrix zero inflation model data data area area N.max maximum true count values (calculating integral) zeroinfl logical, Binomial-ZIP model fitted inits initial values used link{optim} link.det, link.zif link function detection zero inflation parts model model logical value indicating whether model frame included component returned value, true state detection model x logical values indicating whether response vector model matrix used fitting process returned components returned value. function zif object returned. object fitted object. trace info returned procedure steps max number steps criter criterion minimized (cAUC=1-AUC) test logical, decrease deviance tested k penalty used AIC control controls optimization, missing taken object distr character, abundance distribution: \"P\" Poisson, \"NB\" Negative Binomial. ... arguments passed functions","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single visit N-mixture abundance models — svabu","text":"See Examples. right hand side formula must contain least one continuous (.e. non discrete/categorical) covariate. necessary condition single-visit method valid parameters identifiable. See References detailed description. Binomial-Poisson model single visit special case N-mixture model proposed Royle (2004) explained Solymos et . (2012) Solymos Lele (2016).","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single visit N-mixture abundance models — svabu","text":"object class 'svabu'.","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Single visit N-mixture abundance models — svabu","text":"Royle, J. . 2004. N-Mixture Models Estimating Population Size Spatially Replicated Counts. Biometrics, 60(1), 108--115. <doi:10.1111/j.0006-341X.2004.00142.x> Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197--205. <doi:10.1002/env.1149> Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196--205. <doi:10.1111/2041-210X.12432> Denes, F., Solymos, P., Lele, S. R., Silveira, L. & Beissinger, S. 2017. Biome scale signatures land use change raptor abundance: insights single-visit detection-based models. Journal Applied Ecology, 54, 1268--1278. <doi:10.1111/1365-2664.12818>","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Single visit N-mixture abundance models — svabu","text":"Peter Solymos Subhash Lele","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single visit N-mixture abundance models — svabu","text":"","code":"data(databu)  ## fit BZIP and BP models m00 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:200,])  ## print method m00 #>  #> Call: #> svabu(formula = Y ~ x1 + x5 | x2 + x5, data = databu[1:200, ]) #>  #> Single visit Binomial - Zero Inflated Poisson model #> Conditional Maximum Likelihood estimates #>  #> Coefficients for abundance (log link): #> (Intercept)           x1           x5   #>      2.0318      -0.8921       0.5385   #> Coefficients for detection (logit link): #> (Intercept)           x2           x5   #>      0.8124       1.6873      -0.4561   #> Coefficients for zero inflation (logit link): #> (Intercept)   #>     -0.7758   #>  ## summary: CMLE summary(m00) #>  #> Call: #> svabu(formula = Y ~ x1 + x5 | x2 + x5, data = databu[1:200, ]) #>  #> Single visit Binomial - Zero Inflated Poisson model #> Conditional Maximum Likelihood estimates #>  #> Coefficients for abundance (log link): #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   2.0318     0.1901  10.686  < 2e-16 *** #> x1           -0.8921     0.1701  -5.244 1.57e-07 *** #> x5            0.5385     0.1720   3.131  0.00174 **  #> Coefficients for detection (logit link): #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   0.8124     0.6837   1.188    0.235     #> x2            1.6873     0.4040   4.177 2.96e-05 *** #> x5           -0.4561     0.5659  -0.806    0.420     #> Coefficients for zero inflation (logit link): #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  -0.7758     0.1705  -4.551 5.33e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Log-likelihood: -300.1 on 7 Df #> AIC = 614.2  #>  ## coef coef(m00) #> sta_(Intercept)          sta_x1          sta_x5 det_(Intercept)          det_x2  #>       2.0317779      -0.8921099       0.5384850       0.8123504       1.6872739  #>          det_x5 zif_(Intercept)  #>      -0.4560919      -0.7758071  coef(m00, model=\"sta\") ## state (abundance) #> (Intercept)          x1          x5  #>   2.0317779  -0.8921099   0.5384850  coef(m00, model=\"det\") ## detection #> (Intercept)          x2          x5  #>   0.8123504   1.6872739  -0.4560919  coef(m00, model=\"zif\") ## zero inflation (this is part of the 'true state'!) #> (Intercept)  #>  -0.7758071   if (FALSE) { ## Diagnostics and model comparison  m01 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:200,], zeroinfl=FALSE) ## compare estimates (note, zero inflation is on the logit scale!) cbind(truth=c(2,-0.8,0.5, 1,2,-0.5, plogis(0.3)), \"B-ZIP\"=coef(m00), \"B-P\"=c(coef(m01), NA))  ## fitted plot(fitted(m00), fitted(m01)) abline(0,1)  ## compare models AIC(m00, m01) BIC(m00, m01) logLik(m00) logLik(m01) ## diagnostic plot plot(m00) plot(m01)  ## Bootstrap  ## non parametric bootstrap ## - initial values are the estimates m02 <- bootstrap(m00, B=25) attr(m02, \"bootstrap\") extractBOOT(m02) summary(m02) summary(m02, type=\"cmle\") summary(m02, type=\"boot\") ## vcov vcov(m02, type=\"cmle\") vcov(m02, type=\"boot\") vcov(m02, model=\"sta\") vcov(m02, model=\"det\") ## confint confint(m02, type=\"cmle\") ## Wald-type confint(m02, type=\"boot\") ## quantile based ## parametric bootstrap simulate(m00, 5) m03 <- bootstrap(m00, B=5, type=\"param\") extractBOOT(m03) summary(m03)  ## Model selection  m04 <- svabu(Y ~ x1 + x5 | x2 + x5 + x3, databu[1:200,], phi.boot=0) m05 <- drop1(m04, model=\"det\") m05 m06 <- svabu.step(m04, model=\"det\") summary(m06) m07 <- update(m04, . ~ . | . - x3) m07  ## Controls  m00$control getOption(\"detect.optim.control\") getOption(\"detect.optim.method\") options(\"detect.optim.method\"=\"BFGS\") m08 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:100,]) m08$control ## but original optim method is retained during model selection and bootstrap ## fitted models can be used to provide initial values options(\"detect.optim.method\"=\"Nelder-Mead\") m09 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:100,], inits=coef(m08))  ## Ovenbirds dataset  data(oven) ovenc <- oven ovenc[, c(4:8,10:11)][] <- lapply(ovenc[, c(4:8,10:11)], scale) moven <- svabu(count ~ pforest | observ + pforest + julian + timeday, ovenc) summary(moven) drop1(moven, model=\"det\") moven2 <- update(moven, . ~ . | . - timeday) summary(moven2) moven3 <- update(moven2, . ~ . | ., zeroinfl=FALSE) summary(moven3) BIC(moven, moven2, moven3) }"},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":null,"dir":"Reference","previous_headings":"","what":"ZI Binomial model with single visit — svocc","title":"ZI Binomial model with single visit — svocc","text":"ZI Binomial model single visit","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ZI Binomial model with single visit — svocc","text":"","code":"svocc(formula, data, link.sta = \"cloglog\", link.det = \"logit\",     penalized = FALSE, method = c(\"optim\", \"dc\"), inits,     model = TRUE, x = FALSE, ...) svocc.fit(Y, X, Z, link.sta = \"cloglog\", link.det = \"logit\",     penalized = FALSE, auc = FALSE, method = c(\"optim\", \"dc\"),     inits, ...)  extractMLE(object, ...) svocc.step(object, model, trace = 1, steps = 1000,     criter = c(\"AIC\", \"BIC\", \"cAUC\"), test = FALSE, k = 2,     control, ...)"},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ZI Binomial model with single visit — svocc","text":"formula formula form y ~ x | z, y vector observations, x set covariates occurrence model, z set covariates detection model Y, X, Z vector observation, design matrix occurrence model, design matrix detection model data data link.sta, link.det link function occurrence (true state) detection model penalized logical, penalized likelihood estimate computed method optimization data cloning used optimization inits initial values model logical value indicating whether model frame included component returned value, true state detection model x logical values indicating whether response vector model matrix used fitting process returned components returned value auc logical, AUC calculated object fitted model object trace info returned procedure steps max number steps criter criterion minimized (cAUC=1-AUC) test logical, decrease deviance tested k penalty used AIC control controls optimization, missing taken object ... arguments passed functions","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ZI Binomial model with single visit — svocc","text":"See Examples. right hand side formula must contain least one continuous (.e. non discrete/categorical) covariate. necessary condition single-visit method valid parameters identifiable. See References detailed description.","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ZI Binomial model with single visit — svocc","text":"object class 'svocc'.","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ZI Binomial model with single visit — svocc","text":"Lele, S.R., Moreno, M. Bayne, E. 2012. Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22--31. <doi:10.1093/jpe/rtr042> Moreno, M. Lele, S. R. 2010. Improved estimation site occupancy using penalized likelihood. Ecology, 91, 341--346. <doi:10.1890/09-1073.1> Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196--205. <doi:10.1111/2041-210X.12432>","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ZI Binomial model with single visit — svocc","text":"Peter Solymos Monica Moreno","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ZI Binomial model with single visit — svocc","text":"","code":"data(datocc) ## MLE m00 <- svocc(W ~ x1 | x1 + x3, datocc) ## PMLE m01 <- svocc(W ~ x1 | x1 + x3, datocc, penalized=TRUE)  ## print m00 #>  #> Call: #> svocc(formula = W ~ x1 | x1 + x3, data = datocc) #>  #> Single visit site-occupancy model #> Maximum Likelihood estimates (optim method) #>  #> Coefficients for occurrence (cloglog link): #> (Intercept)           x1   #>     -0.1323       0.1952   #> Coefficients for detection (logit link): #> (Intercept)           x1           x3   #>      1.7159      -0.8027       0.6823   #>  ## summary summary(m00) #>  #> Call: #> svocc(formula = W ~ x1 | x1 + x3, data = datocc) #>  #>  #> Single visit site-occupancy model #> Maximum Likelihood estimates (optim method) #>  #> Occupancy model coefficients with cloglog link: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept)  -0.1323     0.2473  -0.535    0.593 #> x1            0.1952     0.2743   0.711    0.477 #> Detection model coefficients with logit link: #>             Estimate Std. Error z value Pr(>|z|)   #> (Intercept)   1.7159     1.0181   1.685   0.0919 . #> x1           -0.8027     0.6527  -1.230   0.2187   #> x3            0.6823     0.4615   1.479   0.1392   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Log-likelihood: -685.3 on 5 Df #> AIC =  1381  #>  ## coefficients coef(m00) #> sta_(Intercept)          sta_x1 det_(Intercept)          det_x1          det_x3  #>      -0.1322958       0.1951644       1.7158595      -0.8026997       0.6823315  ## state (occupancy) model estimates coef(m00, \"sta\") #> (Intercept)          x1  #>  -0.1322958   0.1951644  ## detection model estimates coef(m00, \"det\") #> (Intercept)          x1          x3  #>   1.7158595  -0.8026997   0.6823315  ## compare estimates cbind(truth=c(0.6, 0.5, 0.4, -0.5, 0.3), mle=coef(m00), pmle=coef(m01)) #>                 truth        mle        pmle #> sta_(Intercept)   0.6 -0.1322958  0.02430912 #> sta_x1            0.5  0.1951644  0.25655518 #> det_(Intercept)   0.4  1.7158595  1.17728813 #> det_x1           -0.5 -0.8026997 -0.65455397 #> det_x3            0.3  0.6823315  0.48569846  ## AIC, BIC AIC(m00) #> [1] 1380.536 BIC(m00) #> [1] 1405.075 ## log-likelihood logLik(m00) #> 'log Lik.' -685.2682 (df=5) ## variance-covariance matrix vcov(m00) #>                 sta_(Intercept)      sta_x1 det_(Intercept)      det_x1 #> sta_(Intercept)      0.06115387  0.05059637     -0.24356444 -0.02790891 #> sta_x1               0.05059637  0.07525103     -0.18873662 -0.12264426 #> det_(Intercept)     -0.24356444 -0.18873662      1.03655380  0.02910518 #> det_x1              -0.02790891 -0.12264426      0.02910518  0.42595948 #> det_x3              -0.10172894 -0.09312253      0.42897946  0.06620205 #>                      det_x3 #> sta_(Intercept) -0.10172894 #> sta_x1          -0.09312253 #> det_(Intercept)  0.42897946 #> det_x1           0.06620205 #> det_x3           0.21295773 vcov(m00, model=\"sta\") #>             (Intercept)         x1 #> (Intercept)  0.06115387 0.05059637 #> x1           0.05059637 0.07525103 vcov(m00, model=\"det\") #>             (Intercept)         x1         x3 #> (Intercept)  1.03655380 0.02910518 0.42897946 #> x1           0.02910518 0.42595948 0.06620205 #> x3           0.42897946 0.06620205 0.21295773 ## confidence intervals confint(m00) #>                       2.5%     97.5% #> sta_(Intercept) -0.6169814 0.3523897 #> sta_x1          -0.3424913 0.7328202 #> det_(Intercept) -0.2796051 3.7113240 #> det_x1          -2.0818814 0.4764820 #> det_x3          -0.2221398 1.5868029 confint(m00, model=\"sta\") #>                   2.5%     97.5% #> (Intercept) -0.6169814 0.3523897 #> x1          -0.3424913 0.7328202 confint(m00, model=\"det\") #>                   2.5%    97.5% #> (Intercept) -0.2796051 3.711324 #> x1          -2.0818814 0.476482 #> x3          -0.2221398 1.586803  ## fitted values ## (conditional probability of occurrence given detection history: ## if W=1, fitted=1, ## if W=0, fitted=(phi*(1-delta)) / ((1-delta) + phi * (1-delta)) summary(fitted(m00)) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.01269 0.17830 0.43880 0.58491 1.00000 1.00000  ## estimated probabilities: (phi*(1-delta)) / ((1-delta) + phi * (1-delta)) summary(m00$estimated.probabilities) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.01269 0.10232 0.17443 0.19693 0.27211 0.57908  ## probability of occurrence (phi) summary(m00$occurrence.probabilities) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.5137  0.5494  0.5850  0.5849  0.6206  0.6551  ## probability of detection (delta) summary(m00$detection.probabilities) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.2468  0.7581  0.8493  0.8200  0.9084  0.9887   if (FALSE) { ## model selection m02 <- svocc(W ~ x1 | x3 + x4, datocc) m03 <- drop1(m02, model=\"det\") ## dropping one term at a time, resulting change in AIC m03 ## updating the model m04 <- update(m02, . ~ . | . - x4) m04 ## automatic model selection ## part of the model (sta/det) must be specified m05 <- svocc.step(m02, model=\"det\") summary(m05)  ## nonparametric bootstrap m06 <- bootstrap(m01, B=25) attr(m06, \"bootstrap\") extractBOOT(m06) summary(m06, type=\"mle\") summary(m06, type=\"pmle\") ## no SEs! PMLE!!! summary(m06, type=\"boot\") ## vcov #vcov(m06, type=\"mle\") ## this does not work with PMLE vcov(m06, type=\"boot\") ## this works ## confint confint(m06, type=\"boot\") ## quantile based  ## parametric bootstrap ## sthis is how observations are simulated head(simulate(m01, 5)) m07 <- bootstrap(m01, B=25, type=\"param\") extractBOOT(m07) summary(m07)  data(oven) ovenc <- oven ovenc[, c(4:8,10:11)][] <- lapply(ovenc[, c(4:8,10:11)], scale) ovenc$count01 <- ifelse(ovenc$count > 0, 1, 0) moven <- svocc(count01 ~ pforest | julian + timeday, ovenc) summary(moven) drop1(moven, model=\"det\") moven2 <- update(moven, . ~ . | . - timeday) summary(moven)  BIC(moven, moven2) AUC(moven, moven2) rocplot(moven) rocplot(moven2, col=2, add=TRUE) }"},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-05-0-may-21-2024","dir":"Changelog","previous_headings":"","what":"Version 0.5-0, May 21, 2024","title":"Version 0.5-0, May 21, 2024","text":"Updated documentation. Adding SQPAD approach.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-6-march-8-2023","dir":"Changelog","previous_headings":"","what":"Version 0.4-6, March 8, 2023","title":"Version 0.4-6, March 8, 2023","text":"CRAN release: 2023-03-08 CRAN alert fixed: internal update.formula.svisit renamed update_formula_svisit (#9). Maintainer email changed personal email.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-5-november-7-2022","dir":"Changelog","previous_headings":"","what":"Version 0.4-5, November 7, 2022","title":"Version 0.4-5, November 7, 2022","text":"CRAN release: 2022-11-07 Documentation updates (#8).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-4-august-12-2020","dir":"Changelog","previous_headings":"","what":"Version 0.4-4, August 12, 2020","title":"Version 0.4-4, August 12, 2020","text":"CRAN release: 2020-08-12 Using fully specified URLs DESCRIPTION per CRAN request.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-3-august-11-2020","dir":"Changelog","previous_headings":"","what":"Version 0.4-3, August 11, 2020","title":"Version 0.4-3, August 11, 2020","text":"Namespace issue fixed scocc.fit extractMLE (#6). Adding na.rm=TRUE cmulti avoid issues optimize interval.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-2-august-29-2018","dir":"Changelog","previous_headings":"","what":"Version 0.4-2, August 29, 2018","title":"Version 0.4-2, August 29, 2018","text":"CRAN release: 2018-08-30 Updated documentation, references.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-1-january-30-2018","dir":"Changelog","previous_headings":"","what":"Version 0.4-1, January 30, 2018","title":"Version 0.4-1, January 30, 2018","text":"CRAN release: 2018-01-31 Denes et al. 2017 paper added documentation. inst/ChangeLog removed replaced NEWS.md. cmulti models now predict method, see examples. \"fmix\"” model type time varying rates added cmulti models.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-0-march-2-2016","dir":"Changelog","previous_headings":"","what":"Version 0.4-0, March 2, 2016","title":"Version 0.4-0, March 2, 2016","text":"CRAN release: 2016-03-03 load_BAM_QPAD function deprecated (migrated QPAD package). hbootindex bugfix: sample() behaviour length(x) == 1 recognized resampling length 1 vector. pbapply package now dependency. Various minor fixes satisfy R-devel checks. Negative Binomial option added svabu. cmulti returns correct nobs (nonzero total counts).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-03-2-may-15-2014","dir":"Changelog","previous_headings":"","what":"Version 0.3-2, May 15, 2014","title":"Version 0.3-2, May 15, 2014","text":"CRAN release: 2014-05-16 Bugfix cmulti2.fit: n undefined (reported Julie Hart). Bugfix hbootindex: n set strata missing. Documentation fixes (comma separated lists variable names inside \\code).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-03-1-sept-25-2013","dir":"Changelog","previous_headings":"","what":"Version 0.3-1, Sept 25, 2013","title":"Version 0.3-1, Sept 25, 2013","text":"CRAN release: 2013-10-26 hbootindex: routine improved, now uses weights proportional groups sizes. Cleanup satisfy R 3.0.2 check: remove :::. Bugfix: svocc returned k=1 object irrespective n.clones option settings MLE method = \"dc\". Help page added internal objects (e.g. cmulti.fit0). drop.scope.svisit longer treated method drop.scope generic.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-03-0-july-29-2013","dir":"Changelog","previous_headings":"","what":"Version 0.3-0, July 29, 2013","title":"Version 0.3-0, July 29, 2013","text":"CRAN release: 2013-07-30 jags.engine removed, replaced dcmle dependency. dFormula checkDesign added Formula dependency, replace old svisitFormula interface allow handling complex designs. logdmultinom: simplified version dmultinom. bymethod: collapses (pools) observations methodology. cmulti: new function conditional multinomial estimation. load_BAM_QPAD: new function load BAM QPAD parameter estimates support functions. hbootindex: new function sample indices replacement grouped/stratified data. fitted.cmulti added: get estimated singing rate distance model parameter (available type = \"mix\") predict methods: response (lhs) dropped formula newdata provided.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-02-2-may-2-2012","dir":"Changelog","previous_headings":"","what":"Version 0.2-2, May 2, 2012","title":"Version 0.2-2, May 2, 2012","text":"CRAN release: 2012-05-03 inst/COPYING file removed (standard license).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-02-1-november-25-2011","dir":"Changelog","previous_headings":"","what":"Version 0.2-1, November 25, 2011","title":"Version 0.2-1, November 25, 2011","text":"CRAN release: 2011-11-26 Help pages edited.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-02-0-october-18-2011","dir":"Changelog","previous_headings":"","what":"Version 0.2-0, October 18, 2011","title":"Version 0.2-0, October 18, 2011","text":"CRAN release: 2011-10-19 svabu related functions added. summary: nobs returned NULL, AIC printed. Now fixed. R (>= 2.13.0) added DESCRIPTION (reported Uwe Ligges).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-01-0-september-27-2011","dir":"Changelog","previous_headings":"","what":"Version 0.1-0, September 27, 2011","title":"Version 0.1-0, September 27, 2011","text":"CRAN release: 2011-09-29 First public release CRAN.","code":""}]
