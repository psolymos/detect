[{"path":"https://peter.solymos.org/detec/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Solymos. Author, maintainer. Monica Moreno. Author. Subhash R. Lele. Author. Steven L. Van Wilgenburg. Contributor.","code":""},{"path":"https://peter.solymos.org/detec/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Solymos P, Moreno M, Lele SR (2025). detect: Analyzing Wildlife Data Detection Error. R package version 0.5-0, https://github.com/psolymos/detect.","code":"@Manual{,   title = {detect: Analyzing Wildlife Data with Detection Error},   author = {Peter Solymos and Monica Moreno and Subhash R. Lele},   year = {2025},   note = {R package version 0.5-0},   url = {https://github.com/psolymos/detect}, }"},{"path":"https://peter.solymos.org/detec/index.html","id":"detect-analyzing-wildlife-data-with-detection-error","dir":"","previous_headings":"","what":"detect: Analyzing Wildlife Data with Detection Error","title":"detect: Analyzing Wildlife Data with Detection Error","text":"R package implements models analyze site occupancy count data models detection error. package development supported Alberta Biodiversity Monitoring Institute Boreal Avian Modelling (BAM) Project. Main functions: svocc: single visit occupancy model (Lele et al. 2012, Moreno et al. 2010). svabu: single visit Poisson Negative Binomial abundance model based conditional maximum likelihood (Solymos et al. 2012, Denes et al. 2016, Solymos & Lele 2016). cmulti: conditional multinomial maximum likelihood estimation QPAD approach combining removal (point count) distance sampling, efficient flexible setup varying methodologies (Solymos et al. 2013, Solymos et al. 2018). sqpad: single bin QPAD (SQPAD) approach robust analysis point count data (Lele & Solymos 2025).","code":""},{"path":"https://peter.solymos.org/detec/index.html","id":"versions","dir":"","previous_headings":"","what":"Versions","title":"detect: Analyzing Wildlife Data with Detection Error","text":"Install CRAN release version (recommended): Development version: User visible changes package listed NEWS file. Use issue tracker report problem.","code":"install.packages(\"detect\") install.packages(\"detect\", repos = \"https://psolymos.r-universe.dev\")"},{"path":"https://peter.solymos.org/detec/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"detect: Analyzing Wildlife Data with Detection Error","text":"Denes, F., Solymos, P., Lele, S. R., Silveira, L. & Beissinger, S. 2017. Biome scale signatures land use change raptor abundance: insights single-visit detection-based models. Journal Applied Ecology, 54, 1268–1278. DOI: 10.1111/1365-2664.12818 Lele, S.R., Moreno, M. Bayne, E. 2012. Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22–31. DOI: 10.1093/jpe/rtr042 Lele, S. R., Solymos, P. 2025. Single bin QPAD (SQPAD) approach robust analysis point count data detection error. Ornithological Applications, xx, xx–xx. (press) Moreno, M. Lele, S. R. 2010. Improved estimation site occupancy using penalized likelihood. Ecology, 91, 341–346. DOI: 10.1890/09-1073.1 Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197–205. DOI: 10.1002/env.1149 Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047–1058. DOI: 10.1111/2041-210X.12106 Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196–205. DOI: 10.1111/2041-210X.12432 Solymos, P., Matsuoka, S. M., Cumming, S. G., Stralberg, D., Fontaine, P., Schmiegelow, F. K. ., Song, S. J., Bayne, E. M., 2018. Evaluating time-removal models estimating availability boreal birds point-count surveys: sample size requirements model complexity. Condor, 120, 765–786. DOI: 10.1650/CONDOR-18-32.1 Supporting info, including tutorial QPAD method.","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":null,"dir":"Reference","previous_headings":"","what":"AUC ROC plot for fitted models — AUC","title":"AUC ROC plot for fitted models — AUC","text":"Area receiver-operator (ROC) curve (AUC), ROC plot methods fitted models.","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AUC ROC plot for fitted models — AUC","text":"","code":"AUC(object, ...) rocplot(x, ...)"},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AUC ROC plot for fitted models — AUC","text":"object, x fitted model object ... arguments","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AUC ROC plot for fitted models — AUC","text":"AUC returns AUC value model, data frame values models. rocplot returns values used plot invisibly, side effect draws graph.","code":""},{"path":"https://peter.solymos.org/detec/reference/AUC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AUC ROC plot for fitted models — AUC","text":"Peter Solymos Monica Moreno","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Do bootstrap and extract bootstrap results — bootstrap","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"bootstrap extract bootstrap results.","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"","code":"bootstrap(object, ...) extractBOOT(object, ...)"},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"object fitted model object ... arguments","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"bootstrap performs bootstrap. extractBOOT used extract bootstrap results.","code":""},{"path":"https://peter.solymos.org/detec/reference/bootstrap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Do bootstrap and extract bootstrap results — bootstrap","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Conditional Multinomial Maximum Likelihood Estimation different sampling methodologies.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"","code":"cmulti(formula, data, type = c(\"rem\", \"mix\", \"dis\", \"fmix\"),     inits = NULL, method = \"Nelder-Mead\", ...) cmulti.fit(Y, D, X=NULL, type=c(\"rem\", \"mix\", \"dis\", \"fmix\"),     inits=NULL, method=\"Nelder-Mead\", ...)  cmulti2.fit(Y, D1, D2, X1=NULL, X2=NULL,     inits=NULL, method=\"Nelder-Mead\", ...)  # S3 method for class 'cmulti' fitted(object, ...) # S3 method for class 'cmulti' model.frame(formula, ...) # S3 method for class 'cmulti' model.matrix(object, ...) # S3 method for class 'cmulti' predict(object, newdata = NULL,     type = c(\"link\", \"response\"), ...)"},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"formula formula, LHS takes 2 matrices form Y | D, RHS either 1 covariates, see Examples. data data. type character, one \"rem\" (removal sampling, homogeneous singing rates), \"mix\" \"fmix\" (removal sampling, heterogeneous singing rates, \"mix\" implies 'phi' constant 'c' can vary; \"fmix\" implies 'c' constant 'phi' can vary), \"dis\" (distance sampling, half-normal detection function point counts, circular area). predict method type prediction required; default scale linear predictors; alternative \"response\" scale response variable. Y contains cell counts. cmulti.fit requires Y matrix (observations x intervals), dimensions pattern NAs must match D. cmulti2.fit requires Y 3-dimensional array (observations x time intervals x distance intervals), dimensions pattern NAs must match D1 D2. D, D1, D2 design matrices, describe interval endpoints sampling methodology, dimensions must match dimensions Y. X, X1, X2 design matrices, X matrix covariates removal/distance sampling parameters. X1 matrix covariates removal, X2 matrix covariates distance sampling parameters. inits optional initial values. method method optim. object fitted model object. newdata optionally, data frame look variables predict. omitted, fitted linear predictors used. ... additional options optim.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Conditional Multinomial Maximum Likelihood Estimation different sampling methodologies.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"object class 'cmulti'.","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047–1058. <doi:10.1111/2041-210X.12106> Solymos, P., Matsuoka, S. M., Cumming, S. G., Stralberg, D., Fontaine, P., Schmiegelow, F. K. ., Song, S. J., Bayne, E. M., 2018. Evaluating time-removal models estimating availability boreal birds point-count surveys: sample size requirements model complexity. Condor, 120, 765–786. <doi:10.1650/CONDOR-18-32.1> Supporting info, including tutorial QPAD method: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/cmulti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional Multinomial Maximum Likelihood Estimation — cmulti","text":"","code":"simfun1 <- function(n = 10, phi = 0.1, c=1, tau=0.8, type=\"rem\") {     if (type==\"dis\") {         Dparts <- matrix(c(0.5, 1, NA,                       0.5, 1, Inf,                       1, Inf, NA), 3, 3, byrow=TRUE)         D <- Dparts[sample.int(3, n, replace=TRUE),]         CP <- 1-exp(-(D/tau)^2)     } else {         Dparts <- matrix(c(5, 10, NA,                       3, 5, 10,                       3, 5, NA), 3, 3, byrow=TRUE)         D <- Dparts[sample.int(3, n, replace=TRUE),]         CP <- 1-c*exp(-D*phi)     }     k <- ncol(D)     P <- CP - cbind(0, CP[, -k, drop=FALSE])     Psum <- rowSums(P, na.rm=TRUE)     PPsum <- P / Psum     Pok <- !is.na(PPsum)     N <- rpois(n, 10)     Y <- matrix(NA, ncol(PPsum), nrow(PPsum))     Ypre <- sapply(1:n, function(i) rmultinom(1, N, PPsum[i,Pok[i,]]))     Y[t(Pok)] <- unlist(Ypre)     Y <- t(Y)     list(Y=Y, D=D) }  n <- 200 x <- rnorm(n) X <- cbind(1, x)  ## removal, constant vv <- simfun1(n=n, phi=exp(-1.5)) m1 <- cmulti(vv$Y | vv$D ~ 1, type=\"rem\") coef(m1) #> log.phi_(Intercept)  #>           -1.424635  ## mixture, constant (mix and fmix are identical) vv <- simfun1(n=n, phi=exp(-1.5), c=plogis(0.8)) m2 <- cmulti(vv$Y | vv$D ~ 1, type=\"mix\") coef(m2) #>             log.phi logit.c_(Intercept)  #>          -1.5307374           0.7306286  m2f <- cmulti(vv$Y | vv$D ~ 1, type=\"fmix\") coef(m2f) #> log.phi_(Intercept)             logit.c  #>          -1.5307374           0.7306286  ## dist, constant vv <- simfun1(n=n, tau=exp(-0.2), type=\"dis\") m3 <- cmulti(vv$Y | vv$D ~ 1, type=\"dis\") coef(m3) #> log.tau_(Intercept)  #>          -0.1983656   ## removal, not constant log.phi <- crossprod(t(X), c(-2,-1)) vv <- simfun1(n=n, phi=exp(cbind(log.phi, log.phi, log.phi))) m1 <- cmulti(vv$Y | vv$D ~ x, type=\"rem\") coef(m1) #> log.phi_(Intercept)           log.phi_x  #>           -2.032171           -1.050125  ## mixture, fixed phi, varying c logit.c <- crossprod(t(X), c(-2,1)) vv <- simfun1(n=n, phi=exp(-1.5), c=plogis(cbind(logit.c, logit.c, logit.c))) m2 <- cmulti(vv$Y | vv$D ~ x, type=\"mix\") coef(m2) #>             log.phi logit.c_(Intercept)           logit.c_x  #>           -1.448112           -1.872479            1.173636  ## mixture, varying phi, fixed c log.phi <- crossprod(t(X), c(-2,-1)) vv <- simfun1(n=n, phi=exp(cbind(log.phi, log.phi, log.phi)), c=plogis(0.8)) m2f <- cmulti(vv$Y | vv$D ~ x, type=\"fmix\") coef(m2f) #> log.phi_(Intercept)           log.phi_x             logit.c  #>          -2.9816876           0.9971064           0.9536787  ## dist, not constant log.tau <- crossprod(t(X), c(-0.5,-0.2)) vv <- simfun1(n=n, tau=exp(cbind(log.tau, log.tau, log.tau)), type=\"dis\") m3 <- cmulti(vv$Y | vv$D ~ x, type=\"dis\") coef(m3) #> log.tau_(Intercept)           log.tau_x  #>          -0.5123019          -0.2365973   summary(m3) #>  #> Call: #> cmulti(formula = vv$Y | vv$D ~ x, type = \"dis\") #>  #> Distance Sampling (half-normal, circular area) #> Conditional Maximum Likelihood estimates #>  #> Coefficients: #>                     Estimate Std. Error z value Pr(>|z|)     #> log.tau_(Intercept) -0.51230    0.02098  -24.42   <2e-16 *** #> log.tau_x           -0.23660    0.02286  -10.35   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Log-likelihood:  -287  #> BIC = 584.6  #>  coef(m3) #> log.tau_(Intercept)           log.tau_x  #>          -0.5123019          -0.2365973  vcov(m3) #>                     log.tau_(Intercept)     log.tau_x #> log.tau_(Intercept)        4.402095e-04 -5.688569e-05 #> log.tau_x                 -5.688569e-05  5.224621e-04 AIC(m3) #> [1] 578.05 confint(m3) #>                          2.5 %     97.5 % #> log.tau_(Intercept) -0.5534242 -0.4711795 #> log.tau_x           -0.2813970 -0.1917975 logLik(m3) #> 'log Lik.' -287.025 (df=2)  ## fitted values plot(exp(log.tau), fitted(m3))   ## prediction for new locations (type = 'rem') ndf <- data.frame(x=seq(-1, 1, by=0.1)) summary(predict(m1, newdata=ndf, type=\"link\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -3.082  -2.557  -2.032  -2.032  -1.507  -0.982  summary(pr1 <- predict(m1, newdata=ndf, type=\"response\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.04585 0.07752 0.13105 0.15919 0.22155 0.37454  ## turing singing rates into probabilities requires total duration ## 5 minutes used here psing <- 1-exp(-5*pr1) plot(ndf$x, psing, type=\"l\", ylim=c(0,1))   ## prediction for new locations (type = 'dis') summary(predict(m3, newdata=ndf, type=\"link\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -0.7489 -0.6306 -0.5123 -0.5123 -0.3940 -0.2757  summary(pr3 <- predict(m3, newdata=ndf, type=\"response\")) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.4729  0.5323  0.5991  0.6053  0.6744  0.7590  ## turing EDR into probabilities requires finite truncation distances ## r=0.5 used here (50 m) r <- 0.5 pdet <- pr3^2*(1-exp(-r^2/pr3^2))/r^2 plot(ndf$x, pdet, type=\"l\", ylim=c(0,1))   ## joint removal-distance estimation ## is not different from 2 orthogonal estimations  simfun12 <- function(n = 10, phi = 0.1, c=1, tau=0.8, type=\"rem\") {     Flat <- function(x, DIM, dur=TRUE) {         x <- array(x, DIM)         if (!dur) {             x <- aperm(x,c(1,3,2))         }         dim(x) <- c(DIM[1], DIM[2]*DIM[3])         x     }     Dparts1 <- matrix(c(5, 10, NA,                         3, 5, 10,                         3, 5, NA), 3, 3, byrow=TRUE)     D1 <- Dparts1[sample.int(3, n, replace=TRUE),]     CP1 <- 1-c*exp(-D1*phi)     Dparts2 <- matrix(c(0.5, 1, NA,                         0.5, 1, Inf,                         1, Inf, NA), 3, 3, byrow=TRUE)     D2 <- Dparts2[sample.int(3, n, replace=TRUE),]     CP2 <- 1-exp(-(D2/tau)^2)     k1 <- ncol(D1)     k2 <- ncol(D2)     DIM <- c(n, k1, k2)     P1 <- CP1 - cbind(0, CP1[, -k1, drop=FALSE])     P2 <- CP2 - cbind(0, CP2[, -k2, drop=FALSE])     Psum1 <- rowSums(P1, na.rm=TRUE)     Psum2 <- rowSums(P2, na.rm=TRUE)     Pflat <- Flat(P1, DIM, dur=TRUE) * Flat(P2, DIM, dur=FALSE)     PsumFlat <- Psum1 * Psum2     PPsumFlat <- Pflat / PsumFlat     PokFlat <- !is.na(PPsumFlat)     N <- rpois(n, 10)     Yflat <- matrix(NA, ncol(PPsumFlat), nrow(PPsumFlat))     YpreFlat <- sapply(1:n, function(i) rmultinom(1, N, PPsumFlat[i,PokFlat[i,]]))     Yflat[t(PokFlat)] <- unlist(YpreFlat)     Yflat <- t(Yflat)     Y <- array(Yflat, DIM)     k1 <- dim(Y)[2]     k2 <- dim(Y)[3]     Y1 <- t(sapply(1:n, function(i) {         count <- rowSums(Y[i,,], na.rm=TRUE)         nas <- rowSums(is.na(Y[i,,]))         count[nas == k2] <- NA         count     }))     Y2 <- t(sapply(1:n, function(i) {         count <- colSums(Y[i,,], na.rm=TRUE)         nas <- colSums(is.na(Y[i,,]))         count[nas == k2] <- NA         count     }))     list(Y=Y, D1=D1, D2=D2, Y1=Y1, Y2=Y2) }  ## removal and distance, constant vv <- simfun12(n=n, phi=exp(-1.5), tau=exp(-0.2)) res <- cmulti2.fit(vv$Y, vv$D1, vv$D2) res1 <- cmulti.fit(vv$Y1, vv$D1, NULL, \"rem\") res2 <- cmulti.fit(vv$Y2, vv$D2, NULL, \"dis\") ## points estimates are identical cbind(res$coef, c(res1$coef, res2$coef)) #>            [,1]       [,2] #> [1,] -1.4996597 -1.4996597 #> [2,] -0.1685225 -0.1685225 ## standard errors are identical cbind(sqrt(diag(res$vcov)),     c(sqrt(diag(res1$vcov)),sqrt(diag(res2$vcov)))) #>            [,1]       [,2] #> [1,] 0.07163496 0.07163496 #> [2,] 0.02290083 0.02290083  ## removal and distance, not constant vv <- simfun12(n=n,     phi=exp(cbind(log.phi, log.phi, log.phi)),     tau=exp(cbind(log.tau, log.tau, log.tau))) res <- cmulti2.fit(vv$Y, vv$D1, vv$D2, X1=X, X2=X) res1 <- cmulti.fit(vv$Y1, vv$D1, X, \"rem\") res2 <- cmulti.fit(vv$Y2, vv$D2, X, \"dis\")  ## points estimates are identical cbind(res$coef, c(res1$coef, res2$coef)) #>            [,1]       [,2] #> [1,] -1.9852489 -1.9851998 #> [2,] -1.0470136 -1.0471954 #> [3,] -0.5047337 -0.5047734 #> [4,] -0.1950491 -0.1949923 ## standard errors are identical cbind(sqrt(diag(res$vcov)),     c(sqrt(diag(res1$vcov)),sqrt(diag(res2$vcov)))) #>            [,1]       [,2] #> [1,] 0.08249514 0.08249284 #> [2,] 0.07603643 0.07603755 #> [3,] 0.01354381 0.01354325 #> [4,] 0.01396959 0.01396887"},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"Conversion truncated unlimited effective detection distance (EDR).","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"","code":"convertEDR(edr, r, truncated=FALSE)"},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"edr effective detection distance. units r. r truncation distance (radius point count). units edr. truncated logical, see Details.","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"truncated = FALSE means edr unlimited EDR, function returns truncated EDR given r. truncated = TRUE means edr truncated EDR given r, function returns unlimited EDR.","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"numeric vector converted EDR values.","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"Matsuoka, S. M., Bayne, E. M., Solymos, P., Fontaine, P., Cumming, S. G., Schmiegelow, F. K. ., & Song, S. ., 2012. Using binomial distance-sampling models estimate effective detection radius point-counts surveys across boreal Canada. Auk, 129, 268–282. <doi:10.1525/auk.2012.11190> Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047–1058. <doi:10.1111/2041-210X.12106> Supporting info, including tutorial paper: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/convertEDR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between truncated and unlimited effective detection distance (EDR) — convertEDT","text":"","code":"convertEDR(1, 0.5, truncated=FALSE) #> [1] 0.4703182 ## should be close to 1 convertEDR(convertEDR(1, 0.5, truncated=FALSE), 0.5, truncated=TRUE) #> [1] 1.000002"},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated example for abundance model — databu","title":"Simulated example for abundance model — databu","text":"Simulated example abundance model, see code .","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated example for abundance model — databu","text":"","code":"data(databu)"},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated example for abundance model — databu","text":"data frame 1000 observations following 11 variables. N true counts Y observed counts x1 random variables used covariates x2 random variables used covariates x3 random variables used covariates x4 random variables used covariates x5 random variables used covariates x6 random variables used covariates p probability detection lambda mean linear predictor occupancy phi zero inflation probabilities","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated example for abundance model — databu","text":"simulated example corresponds Binomial - ZIP model implemented function svabu.","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated example for abundance model — databu","text":"Simulated example.","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated example for abundance model — databu","text":"Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197–205. <doi:10.1002/env.1149>","code":""},{"path":"https://peter.solymos.org/detec/reference/databu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated example for abundance model — databu","text":"","code":"data(databu) str(databu) #> 'data.frame':\t1000 obs. of  12 variables: #>  $ N     : num  8 12 3 3 0 0 11 8 9 5 ... #>  $ Y     : num  7 2 3 2 0 0 0 8 6 4 ... #>  $ x1    : num  0.114 0.622 0.609 0.623 0.861 ... #>  $ x2    : num  0.985 -1.225 0.71 -0.109 1.783 ... #>  $ x3    : num  0.927 -0.586 -0.828 -0.568 -0.521 ... #>  $ x4    : num  -0.6699 0.4302 -0.0794 0.2769 -0.0882 ... #>  $ x5    : num  1 1 0 0 1 0 1 1 1 0 ... #>  $ x6    : num  0 0 1 0 1 0 1 1 1 1 ... #>  $ p     : num  0.922 0.125 0.918 0.686 0.983 ... #>  $ lambda: num  11.12 7.41 4.54 4.49 6.12 ... #>  $ A     : num  1 1 1 1 0 0 1 1 1 1 ... #>  $ phi   : num  0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 ... if (FALSE) { # \\dontrun{ ## simulation n <- 1000 set.seed(1234) x1 <- runif(n,0,1) x2 <- rnorm(n,0,1) x3 <- runif(n,-1,1) x4 <- runif(n,-1,1) x5 <- rbinom(n,1,0.6) x6 <- rbinom(n,1,0.4) x7 <- rnorm(n,0,1) X <- model.matrix(~ x1 + x5) Z <- model.matrix(~ x2 + x5) Q <- model.matrix(~ x7) beta <- c(2,-0.8,0.5) theta <- c(1, 2, -0.5) phi <- 0.3 p <- drop(binomial(\"logit\")$linkinv(Z %*% theta)) lambda <- drop(exp(X %*% beta)) A <- rbinom(n, 1, 1-phi) N <- rpois(n, lambda * A) Y <- rbinom(n, N, p) databu <- data.frame(N=N, Y=Y, x1, x2, x3, x4, x5, x6, p=p, lambda=lambda, A, phi) } # }"},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated example for occupancy model — datocc","title":"Simulated example for occupancy model — datocc","text":"Simulated example occupancy model, see code .","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated example for occupancy model — datocc","text":"","code":"data(datocc)"},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated example for occupancy model — datocc","text":"data frame 1000 observations following 6 variables. Y true occupancy W observations x1 random variables used covariates x2 random variables used covariates x3 random variables used covariates x4 random variables used covariates p.occ probability occurrence p.det probability detection","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated example for occupancy model — datocc","text":"simulated example corresponds ZI Binomial model implemented function svocc.","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated example for occupancy model — datocc","text":"Simulated example.","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated example for occupancy model — datocc","text":"Lele, S.R., Moreno, M. Bayne, E. (2012) Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22–31. <doi:10.1093/jpe/rtr042>","code":""},{"path":"https://peter.solymos.org/detec/reference/datocc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated example for occupancy model — datocc","text":"","code":"data(datocc) str(datocc) #> 'data.frame':\t1000 obs. of  8 variables: #>  $ Y    : num  1 1 1 1 1 1 0 0 0 1 ... #>  $ W    : num  1 0 0 0 1 1 0 0 0 1 ... #>  $ x1   : num  -0.773 0.245 0.219 0.247 0.722 ... #>  $ x2   : Factor w/ 2 levels \"0\",\"1\": 2 1 1 1 2 1 1 1 2 2 ... #>  $ x3   : num  -1.205 0.301 -1.539 0.635 0.703 ... #>  $ x4   : num  -0.9738 -0.0996 -0.1107 1.1922 -1.6559 ... #>  $ p.occ: num  0.71 0.872 0.869 0.873 0.927 ... #>  $ p.det: num  0.605 0.591 0.457 0.615 0.562 ... if (FALSE) { # \\dontrun{ ## simulation n <- 1000 set.seed(1234) x1 <- runif(n, -1, 1) x2 <- as.factor(rbinom(n, 1, 0.5)) x3 <- rnorm(n) x4 <- rnorm(n) beta <- c(0.6, 0.5) theta <- c(0.4, -0.5, 0.3) X <- model.matrix(~ x1) Z <- model.matrix(~ x1 + x3) mu <- drop(X %*% beta) nu <- drop(Z %*% theta) p.occ <- binomial(\"cloglog\")$linkinv(mu) p.det <- binomial(\"logit\")$linkinv(nu) Y <- rbinom(n, 1, p.occ) W <- rbinom(n, 1, Y * p.det) datocc <- data.frame(Y, W, x1, x2, x3, x4, p.occ, p.det) } # }"},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyzing Wildlife Data with Detection Error — detect-package","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"Models analyzing site occupancy count data models   detection error, including single-visit based models,   conditional distance sampling time-removal models.   Package development supported   Alberta Biodiversity Monitoring Institute   Boreal Avian Modelling Project.","code":""},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"svocc: single visit occupancy model (Lele et al. 2012, Moreno et al. 2010). svabu: single visit abundance model based conditional maximum likelihood (Solymos et al. 2012, Solymos Lele 2016, Denes et al. 2016). cmulti: conditional multinomial maximum likelihood estimation removal (point count) distance sampling, efficient flexible setup varying methodologies (Solymos et al. 2013, Solymos et al. 2018).","code":""},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"Peter Solymos, Monica Moreno, Subhash R Lele Maintainer: Peter Solymos <solymos@ualberta.ca>","code":""},{"path":"https://peter.solymos.org/detec/reference/detect-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyzing Wildlife Data with Detection Error — detect-package","text":"Denes, F., Solymos, P., Lele, S. R., Silveira, L. & Beissinger, S. 2017. Biome scale signatures land use change raptor abundance: insights single-visit detection-based models. Journal Applied Ecology, 54, 1268–1278. <doi:10.1111/1365-2664.12818> Lele, S.R., Moreno, M. Bayne, E. 2012. Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22–31. <doi:10.1093/jpe/rtr042> Moreno, M. Lele, S. R. 2010. Improved estimation site occupancy using penalized likelihood. Ecology, 91, 341–346. <doi:10.1890/09-1073.1> Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197–205. <doi:10.1002/env.1149> Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047–1058. <doi:10.1111/2041-210X.12106> Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196–205. <doi:10.1111/2041-210X.12432> Solymos, P., Matsuoka, S. M., Cumming, S. G., Stralberg, D., Fontaine, P., Schmiegelow, F. K. ., Song, S. J., Bayne, E. M., 2018. Evaluating time-removal models estimating availability boreal birds point-count surveys: sample size requirements model complexity. Condor, 120, 765–786. <doi:10.1650/CONDOR-18-32.1> Supporting info, including tutorial QPAD method: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical bootstrap indices — hbootindex","title":"Hierarchical bootstrap indices — hbootindex","text":"Generates hierarchical bootstrap indices.","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical bootstrap indices — hbootindex","text":"","code":"hbootindex(groups, strata, B = 199)"},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical bootstrap indices — hbootindex","text":"groups group membership vector. strata strata, optional. B number bootstrap iterations.","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hierarchical bootstrap indices — hbootindex","text":"Resampling replacement weights proportional number observations group level (unique values groups). Values groups within levels (unique values) strata resampled independently strata levels.","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical bootstrap indices — hbootindex","text":"matrix bootstrapped indices, number columns B + 1. column resample without replacement (random subsets can selected without reshuffling). elements contain indices according rules described Details section (also randomly reshuffled).","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hierarchical bootstrap indices — hbootindex","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/hbootindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical bootstrap indices — hbootindex","text":"","code":"## equal group sizes groups <- rep(1:4, each=5) strata <- rep(1:2, each=10) hbootindex(groups, strata, 3) #>       [,1] [,2] [,3] [,4] #>  [1,]   19   14   19   17 #>  [2,]    6   19    1   12 #>  [3,]    7    6   15   14 #>  [4,]   18    4   18   16 #>  [5,]    1   17    7   17 #>  [6,]    3   13    4    7 #>  [7,]    2    9   11    5 #>  [8,]    5    9    8    6 #>  [9,]   20   19   18   10 #> [10,]   11    1    6   15 #> [11,]   13   13   14   10 #> [12,]   12   14   12   19 #> [13,]    4   11    1    1 #> [14,]    8    2    1    9 #> [15,]    9    6   20   15 #> [16,]   16    5    9    9 #> [17,]   14   16    6   18 #> [18,]   17   10   18   19 #> [19,]   15    4   16   10 #> [20,]   10   18    4   10  ## unequal group sizes groups <- groups[-c(5,9,10,11)] strata <- strata[-c(5,9,10,11)] hbootindex(groups, strata, 3) #>       [,1] [,2] [,3] [,4] #>  [1,]   16    3    6   16 #>  [2,]    3    3    7    1 #>  [3,]    5    4    9   16 #>  [4,]    2    4    3    2 #>  [5,]    9    7   14    6 #>  [6,]   14   15   15    1 #>  [7,]   13    1   12    9 #>  [8,]    7   14    8   12 #>  [9,]    1   10   16    2 #> [10,]   11   12    8    5 #> [11,]   10   10    4   11 #> [12,]    4   14    2   10 #> [13,]   12    9    7    6 #> [14,]    6    4   16   13 #> [15,]   15    9    4   12 #> [16,]    8   16   15   11"},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions — cmulti.fit0","title":"Internal functions — cmulti.fit0","text":"Internal functions, intended use .","code":""},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions — cmulti.fit0","text":"","code":"cmulti.fit0(Y, D, type=c(\"rem\", \"mix\", \"dis\", \"fmix\"),     interval=c(-25, 25), ...) drop.scope.svisit(terms1, terms2, model = c(\"sta\", \"det\"))"},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions — cmulti.fit0","text":"Y contains cell counts. See cmulti.fit. D design matrix, describe interval endpoints sampling methodology, dimensions must match dimensions Y. See cmulti.fit. type character, one \"rem\" (removal sampling, homogeneous singing rates), \"mix\" \"fmix\" (removal sampling, heterogeneous singing rates), \"dis\" (distance sampling, half-normal detection function point counts, circular area). See cmulti.fit. interval interval used optimize. terms1 terms formula upper/lower scope. See drop.scope. model character, type model considered.","code":""},{"path":"https://peter.solymos.org/detec/reference/internals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal functions — cmulti.fit0","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/josm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bird point count data from Alberta's Oil Sands region — josm","title":"Bird point count data from Alberta's Oil Sands region — josm","text":"Data set used Mahon et al. 2016 Mahon et al. 2019.","code":""},{"path":"https://peter.solymos.org/detec/reference/josm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bird point count data from Alberta's Oil Sands region — josm","text":"","code":"data(\"josm\")"},{"path":"https://peter.solymos.org/detec/reference/josm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bird point count data from Alberta's Oil Sands region — josm","text":"list elements surveys, species, counts.","code":""},{"path":"https://peter.solymos.org/detec/reference/josm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bird point count data from Alberta's Oil Sands region — josm","text":"Mahon et al. 2016 Mahon et al. 2019.","code":""},{"path":"https://peter.solymos.org/detec/reference/josm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bird point count data from Alberta's Oil Sands region — josm","text":"Mahon, C. L., Holloway, G., Solymos, P., Cumming, S. G., Bayne, E. M., Schmiegelow, F. K. ., Song, S. J., 2016. Community structure niche characteristics upland lowland western boreal birds multiple spatial scales Forest Ecology Management 361:99-116. <doi:10.1016/j.foreco.2015.11.007> Mahon, C. L., Holloway, G., Bayne, E. M., Toms, J. D., 2019. Additive interactive cumulative effects boreal landbirds: winners losers multi-stressor landscape Ecological Applications 29:e01895. <doi:10.1002/eap.1895>","code":""},{"path":"https://peter.solymos.org/detec/reference/josm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bird point count data from Alberta's Oil Sands region — josm","text":"","code":"data(josm) str(josm) #> List of 3 #>  $ surveys:'data.frame':\t4569 obs. of  36 variables: #>   ..$ SiteID       : Factor w/ 4569 levels \"CL10102\",\"CL10106\",..: 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ SurveyArea   : Factor w/ 271 levels \"CL101\",\"CL102\",..: 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ Longitude    : num [1:4569] -113 -113 -113 -113 -113 ... #>   ..$ Latitude     : num [1:4569] 55.2 55.2 55.2 55.2 55.2 ... #>   ..$ Date         : Date[1:4569], format: \"2013-06-22\" \"2013-06-22\" ... #>   ..$ StationID    : Factor w/ 4569 levels \"CL10102-1\",\"CL10106-1\",..: 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ ObserverID   : int [1:4569] 82 48 48 82 48 48 48 82 82 82 ... #>   ..$ TimeStart    : Factor w/ 377 levels \"10:00:00 AM\",..: 76 153 75 116 239 200 333 277 161 309 ... #>   ..$ VisitID      : int [1:4569] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ WindStart    : int [1:4569] 0 0 0 0 0 1 2 0 0 0 ... #>   ..$ PrecipStart  : int [1:4569] 0 0 0 0 0 2 0 0 0 0 ... #>   ..$ TempStart    : num [1:4569] 8 4 4 8 9 8 13 11 8 13 ... #>   ..$ CloudStart   : int [1:4569] 0 3 0 0 3 3 0 2 3 1 ... #>   ..$ WindEnd      : int [1:4569] 0 0 0 0 0 1 2 0 0 2 ... #>   ..$ PrecipEnd    : int [1:4569] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ TempEnd      : num [1:4569] 7 4 4 7 9 8 14 10 7 13 ... #>   ..$ CloudEnd     : int [1:4569] 0 3 0 0 3 3 0 2 3 1 ... #>   ..$ TimeFin      : Factor w/ 370 levels \"10:00:00 AM\",..: 87 164 86 127 250 211 344 288 172 320 ... #>   ..$ Noise        : int [1:4569] 1 0 0 1 0 0 1 0 0 1 ... #>   ..$ OvernightRain: Factor w/ 2 levels \"FALSE\",\"TRUE\": 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ DateTime     : POSIXct[1:4569], format: \"2013-06-22 05:12:00\" \"2013-06-22 06:29:00\" ... #>   ..$ SunRiseTime  : POSIXct[1:4569], format: \"2013-06-22 04:52:59\" \"2013-06-22 04:53:04\" ... #>   ..$ SunRiseFrac  : num [1:4569] 0.203 0.204 0.204 0.203 0.204 ... #>   ..$ TSSR         : num [1:4569] 0.0132 0.0666 0.0125 0.041 0.1263 ... #>   ..$ OrdinalDay   : int [1:4569] 172 172 172 172 172 172 172 172 172 172 ... #>   ..$ DAY          : num [1:4569] 0.471 0.471 0.471 0.471 0.471 ... #>   ..$ Open         : num [1:4569] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Water        : num [1:4569] 0.02055 0.00752 0.00752 0.03284 0.00416 ... #>   ..$ Agr          : num [1:4569] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ UrbInd       : num [1:4569] 0 0 0 0.01056 0.00839 ... #>   ..$ SoftLin      : num [1:4569] 0.00521 0.01811 0.01811 0.00141 0.01349 ... #>   ..$ Roads        : num [1:4569] 0.052461 0.000913 0.000913 0.003307 0.046578 ... #>   ..$ Decid        : num [1:4569] 0.8569 0.0443 0.0443 0.8823 0.8139 ... #>   ..$ OpenWet      : num [1:4569] 0.00315 0.58355 0.58355 0.06961 0.11164 ... #>   ..$ Conif        : num [1:4569] 0.0249 0 0 0 0 ... #>   ..$ ConifWet     : num [1:4569] 0.0368 0.3456 0.3456 0 0.0018 ... #>  $ species:'data.frame':\t149 obs. of  3 variables: #>   ..$ SpeciesID     : Factor w/ 150 levels \"ALFL\",\"AMBI\",..: 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ SpeciesName   : Factor w/ 149 levels \"Alder Flycatcher\",..: 1 2 3 4 5 6 7 8 9 11 ... #>   ..$ ScientificName: Factor w/ 145 levels \"\",\"Accipiter cooperii\",..: 61 23 70 47 31 69 1 117 135 10 ... #>  $ counts :'data.frame':\t52372 obs. of  18 variables: #>   ..$ ObservationID: Factor w/ 57024 levels \"CL10102-130622-001\",..: 1 2 3 4 5 6 8 9 10 11 ... #>   ..$ SiteID       : Factor w/ 4569 levels \"CL10102\",\"CL10106\",..: 1 1 1 1 1 1 1 1 2 2 ... #>   ..$ StationID    : Factor w/ 4569 levels \"CL10102-1\",\"CL10106-1\",..: 1 1 1 1 1 1 1 1 2 2 ... #>   ..$ TimeInterval : int [1:52372] 1 1 1 1 5 5 1 1 1 1 ... #>   ..$ Direction    : int [1:52372] 1 2 2 2 1 4 4 4 1 1 ... #>   ..$ Distance     : int [1:52372] 1 2 2 1 3 3 2 1 1 1 ... #>   ..$ DetectType1  : Factor w/ 3 levels \"C\",\"S\",\"V\": 2 2 2 2 1 1 2 2 2 2 ... #>   ..$ DetectType2  : Factor w/ 3 levels \"C\",\"S\",\"V\": NA NA NA NA NA NA NA NA NA NA ... #>   ..$ DetectType3  : Factor w/ 3 levels \"C\",\"S\",\"V\": NA NA NA NA NA NA NA NA NA NA ... #>   ..$ Sex          : Factor w/ 4 levels \"F\",\"M\",\"P\",\"U\": 2 2 2 2 4 4 2 2 2 2 ... #>   ..$ Age          : Factor w/ 6 levels \"A\",\"F\",\"J\",\"JUV\",..: 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ Activity1    : Factor w/ 17 levels \"BE\",\"CF\",\"CH\",..: 5 5 5 5 NA NA NA 5 5 NA ... #>   ..$ Activity2    : Factor w/ 17 levels \"48\",\"BE\",\"CF\",..: NA NA NA NA NA NA NA NA NA NA ... #>   ..$ Activity3    : Factor w/ 7 levels \"CF\",\"DC\",\"DR\",..: NA NA NA NA NA NA NA NA NA NA ... #>   ..$ ActivityNote : Factor w/ 959 levels \"AGITATED\",\"AGITATED CALLING\",..: NA NA NA NA NA NA NA NA NA NA ... #>   ..$ Dur          : Factor w/ 3 levels \"0-3min\",\"3-5min\",..: 1 1 1 1 3 3 1 1 1 1 ... #>   ..$ Dis          : Factor w/ 3 levels \"0-50m\",\"50-100m\",..: 1 2 2 1 3 3 2 1 1 1 ... #>   ..$ SpeciesID    : Factor w/ 149 levels \"ALFL\",\"AMBI\",..: 107 95 95 107 46 43 140 95 125 38 ..."},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":null,"dir":"Reference","previous_headings":"","what":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"Load BAM QPAD parameter estimates support functions.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"","code":"load_BAM_QPAD(version)"},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"version version BAM QPAD estimates. List selection provided missing.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"load_BAM_QPAD function 'detect' package deprecated. Use load_BAM_QPAD function 'QPAD' package instead. See https://github.com/psolymos/QPAD information.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"returns message.","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"Solymos, P., Matsuoka, S. M., Bayne, E. M., Lele, S. R., Fontaine, P., Cumming, S. G., Stralberg, D., Schmiegelow, F. K. . & Song, S. J., 2013. Calibrating indices avian density non-standardized survey data: making messy situation. Methods Ecology Evolution, 4, 1047–1058. <doi:10.1111/2041-210X.12106> Supporting info, including tutorial paper: https://github.com/psolymos/QPAD/tree/master/inst/doc/v2","code":""},{"path":"https://peter.solymos.org/detec/reference/load_BAM_QPAD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load BAM QPAD parameter estimates and support functions — load_BAM_QPAD","text":"Peter Solymos","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":null,"dir":"Reference","previous_headings":"","what":"Ovenbird abundances — oven","title":"Ovenbird abundances — oven","text":"Ovenbird abundances BBS","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ovenbird abundances — oven","text":"","code":"data(oven)"},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ovenbird abundances — oven","text":"data frame 891 observations following 11 variables. count observations route route id stop stop id within route pforest proportion forest pdecid proportion deciduous forest pagri proportion agricultural areas long longitude lat latitude observ observer, factor levels ARS DW RDW SVW julian Julian day timeday time day","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ovenbird abundances — oven","text":"BBS, Erin Bayne (Univ. Alberta), unpublished data set used Solymos et al. 2012.","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ovenbird abundances — oven","text":"Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197–205. <doi:10.1002/env.1149>","code":""},{"path":"https://peter.solymos.org/detec/reference/oven.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ovenbird abundances — oven","text":"","code":"data(oven) str(oven) #> 'data.frame':\t891 obs. of  11 variables: #>  $ count  : int  1 0 0 1 0 0 0 0 0 0 ... #>  $ route  : int  2 2 2 2 2 2 2 2 2 2 ... #>  $ stop   : int  2 4 6 8 10 12 14 16 18 20 ... #>  $ pforest: num  0.947 0.903 0.814 0.89 0.542 ... #>  $ pdecid : num  0.575 0.562 0.549 0.679 0.344 ... #>  $ pagri  : num  0 0 0 0 0.414 ... #>  $ long   : num  609343 608556 607738 607680 607944 ... #>  $ lat    : num  5949071 5947735 5946301 5944720 5943088 ... #>  $ observ : Factor w/ 4 levels \"ARS\",\"DW\",\"RDW\",..: 4 4 4 4 4 4 4 4 4 4 ... #>  $ julian : int  181 181 181 181 181 181 181 181 181 181 ... #>  $ timeday: int  2 4 6 8 10 12 14 16 18 20 ..."},{"path":"https://peter.solymos.org/detec/reference/paired.html","id":null,"dir":"Reference","previous_headings":"","what":"Example point count data set with paired human and ARU data — paired","title":"Example point count data set with paired human and ARU data — paired","text":"Data set Van Wilgenburg et al. 2017 <doi:10.5751/ACE-00975-120113>.","code":""},{"path":"https://peter.solymos.org/detec/reference/paired.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example point count data set with paired human and ARU data — paired","text":"","code":"data(\"paired\")"},{"path":"https://peter.solymos.org/detec/reference/paired.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example point count data set with paired human and ARU data — paired","text":"data frame 11340 observations following 37 variables. sort numeric vector, sorting ID. UniqueID Character, unique location ID. SurveyDate Date. Time Time. Visit numeric vector, visit location. Observer Character observers' initials. SurveyType Character values       ARU (automated recording unit) HUM (human observer) NoiseLevel Character values Heavy Light Moderate None Unusable. SPECIES Character values species,       4-letter codes following AOU alpha codes. Count numeric vector, number individuals counted. TimeInterval Character, original interval         individual detected . DISTANCE Character values >100 m, 0-49 m, 50-100 m, ARU. FID numeric vector FID. Strata Character, strata. Plot Character, plot. Station Character, station. Latitude numeric vector, latitude decimal degrees. Longitude numeric vector, longitude decimal degrees. Join_Count numeric vector. YearLoss numeric vector. Class_Name Character, ModisLCC description. ModisLCC numeric vector, Modis land cover class. FIRENAME Character, fire name. FIREYEAR numeric vector, year fire. Disturbance Character levels Cutblock, Fire, Undisturbed PKEY Character, point count ID. PKEYm Character, PKEY abbreviated SurveyType. Noise numeric (ordinal) version NoiseLevel. JULIAN numeric vector, ordinal day year. JDAY numeric vector, normalized version JULIAN. srise numeric vector, sunrise time hours. start_time numeric vector, survey start time hours. TSSR numeric vector, normalized time since sunrise (survey time sunrise time difference fraction day). Interval Character levels       0-3 min, 3-5 min, 5-10 min, UNK. SS Character, station ID. RandomSel numeric vector training (1) hold-(0) observations. SpeciesName Species common name.","code":""},{"path":"https://peter.solymos.org/detec/reference/paired.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example point count data set with paired human and ARU data — paired","text":"Van Wilgenburg et al. 2016.","code":""},{"path":"https://peter.solymos.org/detec/reference/paired.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example point count data set with paired human and ARU data — paired","text":"Van Wilgenburg, S. L., P. Solymos, K. J. Kardynal, M. D. Frey. 2017. Paired sampling standardizes point count data humans acoustic recorders. Avian Conservation Ecology 12(1):13. <doi:10.5751/ACE-00975-120113>","code":""},{"path":"https://peter.solymos.org/detec/reference/paired.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example point count data set with paired human and ARU data — paired","text":"","code":"data(paired) str(paired) #> 'data.frame':\t11340 obs. of  37 variables: #>  $ sort        : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ UniqueID    : chr  \"05-041-01\" \"05-041-01\" \"05-041-01\" \"05-041-01\" ... #>  $ SurveyDate  : POSIXlt, format: \"2015-06-22\" \"2015-06-22\" ... #>  $ Time        : POSIXlt, format: \"2015-06-22 08:29:00\" \"2015-06-22 08:29:00\" ... #>  $ Visit       : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ Observer    : chr  \"BFDO\" \"BFDO\" \"BFDO\" \"BFDO\" ... #>  $ SurveyType  : chr  \"ARU\" \"ARU\" \"ARU\" \"ARU\" ... #>  $ NoiseLevel  : chr  \"Moderate\" \"Moderate\" \"Moderate\" \"Moderate\" ... #>  $ SPECIES     : chr  \"FOSP\" \"LISP\" \"SWTH\" \"YBFL\" ... #>  $ Count       : int  1 1 1 1 1 1 1 1 1 2 ... #>  $ TimeInterval: chr  \"0-1 min\" \"1-2 min\" \"0-1 min\" \"9-10 min\" ... #>  $ DISTANCE    : chr  \"ARU\" \"ARU\" \"ARU\" \"ARU\" ... #>  $ FID         : int  44 44 44 44 44 44 44 44 44 44 ... #>  $ Strata      : chr  \"5\" \"5\" \"5\" \"5\" ... #>  $ Plot        : chr  \"41\" \"41\" \"41\" \"41\" ... #>  $ Station     : chr  \"1\" \"1\" \"1\" \"1\" ... #>  $ Latitude    : num  58.1 58.1 58.1 58.1 58.1 ... #>  $ Longitude   : num  -109 -109 -109 -109 -109 ... #>  $ Join_Count  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ YearLoss    : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Class_Name  : chr  \"Sparse Coniferous\" \"Sparse Coniferous\" \"Sparse Coniferous\" \"Sparse Coniferous\" ... #>  $ ModisLCC    : int  8 8 8 8 8 8 8 8 8 8 ... #>  $ FIRENAME    : chr  \"ALTA\" \"ALTA\" \"ALTA\" \"ALTA\" ... #>  $ FIREYEAR    : int  1980 1980 1980 1980 1980 1980 1980 1980 1980 1980 ... #>  $ Disturbance : chr  \"Fire\" \"Fire\" \"Fire\" \"Fire\" ... #>  $ PKEY        : chr  \"05-041-01_1\" \"05-041-01_1\" \"05-041-01_1\" \"05-041-01_1\" ... #>  $ PKEYm       : chr  \"05-041-01_1_A\" \"05-041-01_1_A\" \"05-041-01_1_A\" \"05-041-01_1_A\" ... #>  $ Noise       : int  2 2 2 2 2 2 2 2 2 2 ... #>  $ JULIAN      : int  172 172 172 172 172 172 172 172 172 172 ... #>  $ JDAY        : num  0.471 0.471 0.471 0.471 0.471 ... #>  $ srise       : num  4.22 4.22 4.22 4.22 4.22 ... #>  $ start_time  : num  8.48 8.48 8.48 8.48 8.48 ... #>  $ TSSR        : num  0.178 0.178 0.178 0.178 0.178 ... #>  $ Interval    : chr  \"0-3 min\" \"0-3 min\" \"0-3 min\" \"5-10 min\" ... #>  $ SS          : chr  \"5.041\" \"5.041\" \"5.041\" \"5.041\" ... #>  $ RandomSel   : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ SpeciesName : chr  \"Fox Sparrow\" \"Lincoln's Sparrow\" \"Swainson's Thrush\" \"Yellow-bellied Flycatcher\" ..."},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":null,"dir":"Reference","previous_headings":"","what":"Single-bin QPAD (SQPAD) — sqpad","title":"Single-bin QPAD (SQPAD) — sqpad","text":"Single bin QPAD (SQPAD) approach Lele Solymos (2025).","code":""},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single-bin QPAD (SQPAD) — sqpad","text":"","code":"sqpad(formula, data, dis, dur,     type = c(\"full\", \"approx\"), det = c(\"joint\", \"pq\"),     Nmax = NULL, K = NULL, A = NULL,     montecarlo = FALSE, np = 1000, distcorr = 2/3, ...)  sqpad.fit(Y, dis, dur, X = NULL, Z = NULL,      type = c(\"full\", \"approx\", \"conv\"), det = c(\"joint\", \"pq\"),     init = NULL, method = \"Nelder-Mead\", hessian = TRUE,     tt1 = NULL, A = NULL, Nmax = NULL, K = NULL,      montecarlo = FALSE, np = 1000, distcorr = 2/3, dislist = NULL, ...)  # S3 method for class 'sqpad' print(x, digits, ...) # S3 method for class 'sqpad' vcov(object, ...) # S3 method for class 'sqpad' fitted(object, ...) # S3 method for class 'sqpad' logLik(object, ...) # S3 method for class 'sqpad' summary(object, ...) # S3 method for class 'summary.sqpad' print(x, digits, ...) # S3 method for class 'sqpad' predict(object, newdata = NULL,      type = c(\"link\", \"response\"), ...)"},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single-bin QPAD (SQPAD) — sqpad","text":"formula formula, LHS takes vector, RHS either 1 covariates, see Examples. data data. dis, dur vector distance duration values. vector area values. Area calculated dis, use distance directly related area (e.g. ARU data). type character, one \"full\" (full likelihood), \"approx\" (approximate method), \"conv\" (convolution likelihood). det character, detection model: \"joint\" independence (\"pq\"). Y response vector, non-negative integers. X, Z design matrices, X matrix covariates density parameters. Z matrix covariates cue rate model. NULL means constant density detection. K truncation value, K=1 implements occupancy version SQPAD. K>1 implements truncated count models. Nmax maximum abundance value numerical integration full convolution likelihoods. montecarlo, np, distcorr mean probability (TRUE) using np points approximation used distance correction distcorr detection model. dislist distance list convolution likelihood. tt1 vector time 1st detection values, units dur. init optional initial values optim. method method optim. hessian logical, Hessian matrix computed optim. object, x fitted model object. newdata optionally, data frame look variables predict. omitted, fitted linear predictors used. digits digits use providing summaries. ... additional options optim methods.","code":""},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single-bin QPAD (SQPAD) — sqpad","text":"Single bin QPAD (SQPAD) approach robust analysis point count data detection error Lele Solymos (2025).","code":""},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single-bin QPAD (SQPAD) — sqpad","text":"object class 'sqpad'.","code":""},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Single-bin QPAD (SQPAD) — sqpad","text":"Solymos, P., Lele, S. R., 2025. Single bin QPAD (SQPAD) approach robust analysis point count data detection error. Ornithological Applications, xx, xx–xx. Supporting info SQPAD method: https://github.com/psolymos/sqpad-paper, <doi:10.5281/zenodo.16172209>.","code":""},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Single-bin QPAD (SQPAD) — sqpad","text":"Peter Solymos Subhash Lele","code":""},{"path":"https://peter.solymos.org/detec/reference/sqpad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single-bin QPAD (SQPAD) — sqpad","text":"","code":"set.seed(0) n <- 100 x <- rnorm(n) D <- exp(-2 + 0.5 * x) phi <- 0.25 tau <- 1 dur <- sample(1:10, n, replace=TRUE) dis <- sample(seq(0.5, 2, 0.25), n, replace=TRUE) A <- dis^2 * pi dcorr <- 2/3 p <- 1 - exp(-dur * phi * exp(-(dis*dcorr)^2/tau^2)) N <- rpois(n, D*A) Y <- rbinom(n, N, p)  df <- data.frame(x = x, y = Y)  m <- sqpad(y ~ x | 1, data = df, dis = dis, dur = dur, type = \"full\", det = \"joint\", K = NULL)  print(m) #>  #> Call: #> sqpad(formula = y ~ x | 1, data = df, dis = dis, dur = dur, type = \"full\",  #>     det = \"joint\", K = NULL) #>  #> Single-bin QPAD model with dependence #> Full Maximum Likelihood estimates #>  #> Coefficients: #>     log.D_(Intercept)                log.D_x  log.delta_(Intercept)   #>               -2.6490                 0.5793                 0.6531   #>               log.phi   #>               -0.2066   #>  summary(m) #>  #> Call: #> sqpad(formula = y ~ x | 1, data = df, dis = dis, dur = dur, type = \"full\",  #>     det = \"joint\", K = NULL) #>  #> Single-bin QPAD model with dependence #> Full Maximum Likelihood estimates #>  #> Coefficients: #>                       Estimate Std. Error z value Pr(>|z|)     #> log.D_(Intercept)      -2.6490     0.2559 -10.354  < 2e-16 *** #> log.D_x                 0.5793     0.2028   2.857  0.00428 **  #> log.delta_(Intercept)   0.6531     1.2882   0.507  0.61218     #> log.phi                -0.2066     0.2579  -0.801  0.42313     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Log-likelihood: -61.23  #> BIC = 140.9  #>   coef(m) #>     log.D_(Intercept)               log.D_x log.delta_(Intercept)  #>            -2.6490003             0.5792880             0.6530735  #>               log.phi  #>            -0.2065773  nobs(m) #> [1] 100 vcov(m) #>                       log.D_(Intercept)      log.D_x log.delta_(Intercept) #> log.D_(Intercept)           0.065460969 -0.016823675           -0.11176285 #> log.D_x                    -0.016823675  0.041119454           -0.01041559 #> log.delta_(Intercept)      -0.111762853 -0.010415590            1.65946169 #> log.phi                     0.005060442  0.002226058           -0.29981181 #>                            log.phi #> log.D_(Intercept)      0.005060442 #> log.D_x                0.002226058 #> log.delta_(Intercept) -0.299811809 #> log.phi                0.066510637 confint(m) #>                            2.5 %     97.5 % #> log.D_(Intercept)     -3.1504638 -2.1475368 #> log.D_x                0.1818478  0.9767282 #> log.delta_(Intercept) -1.8717539  3.1779010 #> log.phi               -0.7120453  0.2988906  logLik(m) #> 'log Lik.' -61.23112 (df=4) AIC(m) #> [1] 130.4622 BIC(m) #> [1] 140.8829  fitted(m) #>          1          2          3          4          5          6          7  #> 0.14699069 0.05854361 0.15279417 0.14779970 0.08992282 0.02898216 0.04129937  #>          8          9         10         11         12         13         14  #> 0.05962214 0.07048600 0.28478709 0.11006769 0.04451822 0.03637679 0.05980405  #>         15         16         17         18         19         20         21  #> 0.05946710 0.05572181 0.08184809 0.04218547 0.09102563 0.03453122 0.06210579  #>         22         23         24         25         26         27         28  #> 0.08800342 0.07640095 0.11268680 0.06842058 0.09467870 0.13265186 0.04739391  #>         29         30         31         32         33         34         35  #> 0.03360255 0.07266231 0.06169562 0.05163844 0.05502257 0.04854658 0.10774345  #>         36         37         38         39         40         41         42  #> 0.13783311 0.12565016 0.05514374 0.14490664 0.06015551 0.19579871 0.09786495  #>         43         44         45         46         47         48         49  #> 0.05440536 0.04367441 0.03598041 0.03814792 0.02858479 0.13820291 0.11452005  #>         50         51         52         53         54         55         56  #> 0.06199577 0.08251047 0.05685679 0.29090833 0.04461297 0.06850900 0.08174943  #>         57         58         59         60         61         62         63  #> 0.10117947 0.06399188 0.01950120 0.03401353 0.08705693 0.07027081 0.04101132  #>         64         65         66         67         68         69         70  #> 0.06613240 0.04410854 0.08137721 0.03097599 0.08742141 0.08166761 0.07344785  #>         71         72         73         74         75         76         77  #> 0.07151105 0.08209097 0.04855957 0.06600443 0.10390539 0.13382502 0.07686419  #>         78         79         80         81         82         83         84  #> 0.06605857 0.04169598 0.03075272 0.04456775 0.14623724 0.11061411 0.06227700  #>         85         86         87         88         89         90         91  #> 0.05529417 0.05548123 0.12600196 0.06027998 0.14640132 0.10285967 0.15011940  #>         92         93         94         95         96         97         98  #> 0.04264392 0.07106565 0.04245635 0.09989910 0.07580058 0.06005705 0.16438177  #>         99        100  #> 0.08075527 0.12596964  predict(m, type = \"link\") #>         1         2         3         4         5         6         7         8  #> -1.917386 -2.837983 -1.878664 -1.911897 -2.408804 -3.541075 -3.186908 -2.819728  #>         9        10        11        12        13        14        15        16  #> -2.652341 -1.256013 -2.206660 -3.111857 -3.313824 -2.816682 -2.822332 -2.887384  #>        17        18        19        20        21        22        23        24  #> -2.502890 -3.165680 -2.396614 -3.365891 -2.778916 -2.430380 -2.571760 -2.183143  #>        25        26        27        28        29        30        31        32  #> -2.682082 -2.357266 -2.020027 -3.049262 -3.393153 -2.621932 -2.785542 -2.963489  #>        33        34        35        36        37        38        39        40  #> -2.900012 -3.025231 -2.228002 -1.981712 -2.074254 -2.897812 -1.931666 -2.810822  #>        41        42        43        44        45        46        47        48  #> -1.630668 -2.324167 -2.911293 -3.130993 -3.324781 -3.266284 -3.554881 -1.979032  #>        49        50        51        52        53        54        55        56  #> -2.167005 -2.780689 -2.494830 -2.867220 -1.234747 -3.109731 -2.680790 -2.504096  #>        57        58        59        60        61        62        63        64  #> -2.290859 -2.748999 -3.937279 -3.380997 -2.441193 -2.655399 -3.193907 -2.716097  #>        65        66        67        68        69        70        71        72  #> -3.121102 -2.508660 -3.474543 -2.437015 -2.505098 -2.611180 -2.637903 -2.499927  #>        73        74        75        76        77        78        79        80  #> -3.024964 -2.718033 -2.264274 -2.011222 -2.565715 -2.717214 -3.177351 -3.481777  #>        81        82        83        84        85        86        87        88  #> -3.110745 -1.922525 -2.201708 -2.776163 -2.895088 -2.891710 -2.071458 -2.808755  #>        89        90        91        92        93        94        95        96  #> -1.921404 -2.274390 -1.896324 -3.154871 -2.644151 -3.159279 -2.303595 -2.579649  #>        97        98        99       100  #> -2.812460 -1.805564 -2.516332 -2.071714  predict(m, newdata = df[1:10,], type = \"response\") #>          1          2          3          4          5          6          7  #> 0.14699069 0.05854361 0.15279417 0.14779970 0.08992282 0.02898216 0.04129937  #>          8          9         10  #> 0.05962214 0.07048600 0.28478709  predict(m, newdata = df[1:10,], type = \"link\") #>         1         2         3         4         5         6         7         8  #> -1.917386 -2.837983 -1.878664 -1.911897 -2.408804 -3.541075 -3.186908 -2.819728  #>         9        10  #> -2.652341 -1.256013   if (FALSE) { # \\dontrun{ m0 <- sqpad(y ~ 1 | 1, data = df, dis = dis, dur = dur, type = \"full\", det = \"joint\", K = NULL) m1 <- sqpad(y ~ 1 | x, data = df, dis = dis, dur = dur, type = \"full\", det = \"joint\", K = NULL) m2 <- sqpad(y ~ x | x, data = df, dis = dis, dur = dur, type = \"full\", det = \"joint\", K = NULL)  AIC(m, m0, m1, m2) # m2 is best BIC(m, m0, m1, m2) # this is needed!  # average probability  set.seed(5) n <- 1000 x <- rnorm(n) D <- exp(-2 + 0.5 * x) phi <- 0.25 tau <- 1 dur <- sample(1:10, n, replace=TRUE) dis <- sample(seq(0.5, 2, 0.25), n, replace=TRUE) A <- dis^2 * pi  dcorr <- 2/3 p <- 1 - exp(-dur * phi * exp(-(dis*dcorr)^2/tau^2)) N <- rpois(n, D*A) Y <- rbinom(n, N, p) df <- data.frame(x = x, y = Y)  np <- 1000 dij <- extraDistr::rtriang(as.integer(np), 0, 1, 1) dij <- matrix(dij, nrow = n, ncol = np, byrow = TRUE) p2 <- rowMeans(1 - exp(-dur * phi * exp(-(dis*dij)^2/tau^2))) Y2 <- rbinom(n, N, p2) df2 <- data.frame(x = x, y = Y2)  plot(p, p2) abline(0, 1)  mAP <- sqpad(y ~ x | 1, data = df, dis = dis, dur = dur, type = \"full\",      det = \"joint\", K = NULL, montecarlo = FALSE, hessian = FALSE) mMC <- sqpad(y ~ x | 1, data = df, dis = dis, dur = dur, type = \"full\",      det = \"joint\", K = NULL, montecarlo = TRUE, hessian = FALSE) m2AP <- sqpad(y ~ x | 1, data = df2, dis = dis, dur = dur, type = \"full\",      det = \"joint\", K = NULL, montecarlo = FALSE, hessian = FALSE) m2MC <- sqpad(y ~ x | 1, data = df2, dis = dis, dur = dur, type = \"full\",      det = \"joint\", K = NULL, montecarlo = TRUE, hessian = FALSE)  cbind(mAP=coef(mAP), mMC=coef(mMC), m2AP=coef(m2AP), m2MC=coef(m2MC))  # convolution likelihood  D <- 1 phi <- 0.25 tau <- 1.2 n <- 200  dur <- sample(1:10, n, replace=TRUE) dis <- sample(seq(0.25, 2, 0.25), n, replace=TRUE) A <- dis^2 * pi N <- rpois(n, D*A) dislist <- lapply(seq_len(n), function(i) {     dij <- extraDistr::rtriang(N[i], 0, dis[i], dis[i])     # pij is based on time of 1st detection and distance at 1st detection     pij <- 1 - exp(-dur[i] * phi * exp(-(dij)^2/tau^2))     Yij <- rbinom(length(pij), 1, pij)     dij[Yij > 0] }) Y <- sapply(dis, length)  m4 <- sqpad.fit(Y = Y, dis = dis, dur = dur, dislist = dislist,      type = \"conv\", det = \"joint\", Nmax = 20) cbind(parameters = c(D = D, phi = phi, tau = tau), estimates = exp(m4$coef)) } # }"},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":null,"dir":"Reference","previous_headings":"","what":"Single visit N-mixture abundance models — svabu","title":"Single visit N-mixture abundance models — svabu","text":"Binomial-Poisson, Binomial-NegBin, Binomial-ZIP, Binomial-ZINB models single visit.","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single visit N-mixture abundance models — svabu","text":"","code":"svabu(formula, data, zeroinfl = TRUE, area = 1, N.max = NULL,     inits, link.det = \"logit\", link.zif = \"logit\",     model = TRUE, x = FALSE, distr = c(\"P\", \"NB\"), ...)  svabu.fit(Y, X, Z, Q = NULL, zeroinfl = TRUE, area = 1, N.max = NULL,     inits, link.det = \"logit\", link.zif = \"logit\", ...) svabu_nb.fit(Y, X, Z, Q = NULL, zeroinfl = TRUE, area = 1, N.max = NULL,     inits, link.det = \"logit\", link.zif = \"logit\", ...)  zif(x) is.present(object, ...) predictMCMC(object, ...) svabu.step(object, model, trace = 1, steps = 1000,     criter = c(\"AIC\", \"BIC\"), test = FALSE, k = 2, control, ...)"},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single visit N-mixture abundance models — svabu","text":"formula formula form y ~ x | z, y vector observations, x set covariates occurrence model, z set covariates detection model. x can expanded x1 + zif(x2) terms nonzero count data part (x1) zero inflation component (zif(x2)) using zif special. Y, X, Z, Q vector observation, design matrix abundance model, design matrix detection design matrix zero inflation model data data area area N.max maximum true count values (calculating integral) zeroinfl logical, Binomial-ZIP model fitted inits initial values used link{optim} link.det, link.zif link function detection zero inflation parts model model logical value indicating whether model frame included component returned value, true state detection model x logical values indicating whether response vector model matrix used fitting process returned components returned value. function zif object returned. object fitted object. trace info returned procedure steps max number steps criter criterion minimized (cAUC=1-AUC) test logical, decrease deviance tested k penalty used AIC control controls optimization, missing taken object distr character, abundance distribution: \"P\" Poisson, \"NB\" Negative Binomial. ... arguments passed functions","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single visit N-mixture abundance models — svabu","text":"See Examples. right hand side formula must contain least one continuous (.e. non discrete/categorical) covariate. necessary condition single-visit method valid parameters identifiable. See References detailed description. Binomial-Poisson model single visit special case N-mixture model proposed Royle (2004) explained Solymos et . (2012) Solymos Lele (2016).","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single visit N-mixture abundance models — svabu","text":"object class 'svabu'.","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Single visit N-mixture abundance models — svabu","text":"Royle, J. . 2004. N-Mixture Models Estimating Population Size Spatially Replicated Counts. Biometrics, 60(1), 108–115. <doi:10.1111/j.0006-341X.2004.00142.x> Solymos, P., Lele, S. R. Bayne, E. 2012. Conditional likelihood approach analyzing single visit abundance survey data presence zero inflation detection error. Environmetrics, 23, 197–205. <doi:10.1002/env.1149> Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196–205. <doi:10.1111/2041-210X.12432> Denes, F., Solymos, P., Lele, S. R., Silveira, L. & Beissinger, S. 2017. Biome scale signatures land use change raptor abundance: insights single-visit detection-based models. Journal Applied Ecology, 54, 1268–1278. <doi:10.1111/1365-2664.12818>","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Single visit N-mixture abundance models — svabu","text":"Peter Solymos Subhash Lele","code":""},{"path":"https://peter.solymos.org/detec/reference/svabu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single visit N-mixture abundance models — svabu","text":"","code":"data(databu)  ## fit BZIP and BP models m00 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:200,])  ## print method m00 #>  #> Call: #> svabu(formula = Y ~ x1 + x5 | x2 + x5, data = databu[1:200, ]) #>  #> Single visit Binomial - Zero Inflated Poisson model #> Conditional Maximum Likelihood estimates #>  #> Coefficients for abundance (log link): #> (Intercept)           x1           x5   #>      2.0318      -0.8921       0.5385   #> Coefficients for detection (logit link): #> (Intercept)           x2           x5   #>      0.8124       1.6873      -0.4561   #> Coefficients for zero inflation (logit link): #> (Intercept)   #>     -0.7758   #>  ## summary: CMLE summary(m00) #>  #> Call: #> svabu(formula = Y ~ x1 + x5 | x2 + x5, data = databu[1:200, ]) #>  #> Single visit Binomial - Zero Inflated Poisson model #> Conditional Maximum Likelihood estimates #>  #> Coefficients for abundance (log link): #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   2.0318     0.1901  10.686  < 2e-16 *** #> x1           -0.8921     0.1701  -5.244 1.57e-07 *** #> x5            0.5385     0.1720   3.131  0.00174 **  #> Coefficients for detection (logit link): #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   0.8124     0.6837   1.188    0.235     #> x2            1.6873     0.4040   4.177 2.96e-05 *** #> x5           -0.4561     0.5659  -0.806    0.420     #> Coefficients for zero inflation (logit link): #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  -0.7758     0.1705  -4.551 5.33e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Log-likelihood: -300.1 on 7 Df #> AIC = 614.2  #>  ## coef coef(m00) #> sta_(Intercept)          sta_x1          sta_x5 det_(Intercept)          det_x2  #>       2.0317779      -0.8921099       0.5384850       0.8123504       1.6872739  #>          det_x5 zif_(Intercept)  #>      -0.4560919      -0.7758071  coef(m00, model=\"sta\") ## state (abundance) #> (Intercept)          x1          x5  #>   2.0317779  -0.8921099   0.5384850  coef(m00, model=\"det\") ## detection #> (Intercept)          x2          x5  #>   0.8123504   1.6872739  -0.4560919  coef(m00, model=\"zif\") ## zero inflation (this is part of the 'true state'!) #> (Intercept)  #>  -0.7758071   if (FALSE) { # \\dontrun{ ## Diagnostics and model comparison  m01 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:200,], zeroinfl=FALSE) ## compare estimates (note, zero inflation is on the logit scale!) cbind(truth=c(2,-0.8,0.5, 1,2,-0.5, plogis(0.3)), \"B-ZIP\"=coef(m00), \"B-P\"=c(coef(m01), NA))  ## fitted plot(fitted(m00), fitted(m01)) abline(0,1)  ## compare models AIC(m00, m01) BIC(m00, m01) logLik(m00) logLik(m01) ## diagnostic plot plot(m00) plot(m01)  ## Bootstrap  ## non parametric bootstrap ## - initial values are the estimates m02 <- bootstrap(m00, B=25) attr(m02, \"bootstrap\") extractBOOT(m02) summary(m02) summary(m02, type=\"cmle\") summary(m02, type=\"boot\") ## vcov vcov(m02, type=\"cmle\") vcov(m02, type=\"boot\") vcov(m02, model=\"sta\") vcov(m02, model=\"det\") ## confint confint(m02, type=\"cmle\") ## Wald-type confint(m02, type=\"boot\") ## quantile based ## parametric bootstrap simulate(m00, 5) m03 <- bootstrap(m00, B=5, type=\"param\") extractBOOT(m03) summary(m03)  ## Model selection  m04 <- svabu(Y ~ x1 + x5 | x2 + x5 + x3, databu[1:200,], phi.boot=0) m05 <- drop1(m04, model=\"det\") m05 m06 <- svabu.step(m04, model=\"det\") summary(m06) m07 <- update(m04, . ~ . | . - x3) m07  ## Controls  m00$control getOption(\"detect.optim.control\") getOption(\"detect.optim.method\") options(\"detect.optim.method\"=\"BFGS\") m08 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:100,]) m08$control ## but original optim method is retained during model selection and bootstrap ## fitted models can be used to provide initial values options(\"detect.optim.method\"=\"Nelder-Mead\") m09 <- svabu(Y ~ x1 + x5 | x2 + x5, databu[1:100,], inits=coef(m08))  ## Ovenbirds dataset  data(oven) ovenc <- oven ovenc[, c(4:8,10:11)][] <- lapply(ovenc[, c(4:8,10:11)], scale) moven <- svabu(count ~ pforest | observ + pforest + julian + timeday, ovenc) summary(moven) drop1(moven, model=\"det\") moven2 <- update(moven, . ~ . | . - timeday) summary(moven2) moven3 <- update(moven2, . ~ . | ., zeroinfl=FALSE) summary(moven3) BIC(moven, moven2, moven3) } # }"},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":null,"dir":"Reference","previous_headings":"","what":"ZI Binomial model with single visit — svocc","title":"ZI Binomial model with single visit — svocc","text":"ZI Binomial model single visit","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ZI Binomial model with single visit — svocc","text":"","code":"svocc(formula, data, link.sta = \"cloglog\", link.det = \"logit\",     penalized = FALSE, method = c(\"optim\", \"dc\"), inits,     model = TRUE, x = FALSE, ...) svocc.fit(Y, X, Z, link.sta = \"cloglog\", link.det = \"logit\",     penalized = FALSE, auc = FALSE, method = c(\"optim\", \"dc\"),     inits, ...)  extractMLE(object, ...) svocc.step(object, model, trace = 1, steps = 1000,     criter = c(\"AIC\", \"BIC\", \"cAUC\"), test = FALSE, k = 2,     control, ...)"},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ZI Binomial model with single visit — svocc","text":"formula formula form y ~ x | z, y vector observations, x set covariates occurrence model, z set covariates detection model Y, X, Z vector observation, design matrix occurrence model, design matrix detection model data data link.sta, link.det link function occurrence (true state) detection model penalized logical, penalized likelihood estimate computed method optimization data cloning used optimization inits initial values model logical value indicating whether model frame included component returned value, true state detection model x logical values indicating whether response vector model matrix used fitting process returned components returned value auc logical, AUC calculated object fitted model object trace info returned procedure steps max number steps criter criterion minimized (cAUC=1-AUC) test logical, decrease deviance tested k penalty used AIC control controls optimization, missing taken object ... arguments passed functions","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ZI Binomial model with single visit — svocc","text":"See Examples. right hand side formula must contain least one continuous (.e. non discrete/categorical) covariate. necessary condition single-visit method valid parameters identifiable. See References detailed description.","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ZI Binomial model with single visit — svocc","text":"object class 'svocc'.","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ZI Binomial model with single visit — svocc","text":"Lele, S.R., Moreno, M. Bayne, E. 2012. Dealing detection error site occupancy surveys: can single survey? Journal Plant Ecology, 5(1), 22–31. <doi:10.1093/jpe/rtr042> Moreno, M. Lele, S. R. 2010. Improved estimation site occupancy using penalized likelihood. Ecology, 91, 341–346. <doi:10.1890/09-1073.1> Solymos, P., Lele, S. R. 2016. Revisiting resource selection probability functions single-visit methods: clarification extensions. Methods Ecology Evolution, 7, 196–205. <doi:10.1111/2041-210X.12432>","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ZI Binomial model with single visit — svocc","text":"Peter Solymos Monica Moreno","code":""},{"path":"https://peter.solymos.org/detec/reference/svocc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ZI Binomial model with single visit — svocc","text":"","code":"data(datocc) ## MLE m00 <- svocc(W ~ x1 | x1 + x3, datocc) ## PMLE m01 <- svocc(W ~ x1 | x1 + x3, datocc, penalized=TRUE)  ## print m00 #>  #> Call: #> svocc(formula = W ~ x1 | x1 + x3, data = datocc) #>  #> Single visit site-occupancy model #> Maximum Likelihood estimates (optim method) #>  #> Coefficients for occurrence (cloglog link): #> (Intercept)           x1   #>     -0.1323       0.1952   #> Coefficients for detection (logit link): #> (Intercept)           x1           x3   #>      1.7159      -0.8027       0.6823   #>  ## summary summary(m00) #>  #> Call: #> svocc(formula = W ~ x1 | x1 + x3, data = datocc) #>  #>  #> Single visit site-occupancy model #> Maximum Likelihood estimates (optim method) #>  #> Occupancy model coefficients with cloglog link: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept)  -0.1323     0.2473  -0.535    0.593 #> x1            0.1952     0.2743   0.711    0.477 #> Detection model coefficients with logit link: #>             Estimate Std. Error z value Pr(>|z|)   #> (Intercept)   1.7159     1.0181   1.685   0.0919 . #> x1           -0.8027     0.6527  -1.230   0.2187   #> x3            0.6823     0.4615   1.479   0.1392   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Log-likelihood: -685.3 on 5 Df #> AIC =  1381  #>  ## coefficients coef(m00) #> sta_(Intercept)          sta_x1 det_(Intercept)          det_x1          det_x3  #>      -0.1322958       0.1951644       1.7158595      -0.8026997       0.6823315  ## state (occupancy) model estimates coef(m00, \"sta\") #> (Intercept)          x1  #>  -0.1322958   0.1951644  ## detection model estimates coef(m00, \"det\") #> (Intercept)          x1          x3  #>   1.7158595  -0.8026997   0.6823315  ## compare estimates cbind(truth=c(0.6, 0.5, 0.4, -0.5, 0.3), mle=coef(m00), pmle=coef(m01)) #>                 truth        mle        pmle #> sta_(Intercept)   0.6 -0.1322958  0.02430915 #> sta_x1            0.5  0.1951644  0.25655519 #> det_(Intercept)   0.4  1.7158595  1.17728804 #> det_x1           -0.5 -0.8026997 -0.65455395 #> det_x3            0.3  0.6823315  0.48569843  ## AIC, BIC AIC(m00) #> [1] 1380.536 BIC(m00) #> [1] 1405.075 ## log-likelihood logLik(m00) #> 'log Lik.' -685.2682 (df=5) ## variance-covariance matrix vcov(m00) #>                 sta_(Intercept)      sta_x1 det_(Intercept)      det_x1 #> sta_(Intercept)      0.06115389  0.05059639     -0.24356451 -0.02790893 #> sta_x1               0.05059639  0.07525105     -0.18873669 -0.12264430 #> det_(Intercept)     -0.24356451 -0.18873669      1.03655409  0.02910525 #> det_x1              -0.02790893 -0.12264430      0.02910525  0.42595958 #> det_x3              -0.10172898 -0.09312257      0.42897959  0.06620209 #>                      det_x3 #> sta_(Intercept) -0.10172898 #> sta_x1          -0.09312257 #> det_(Intercept)  0.42897959 #> det_x1           0.06620209 #> det_x3           0.21295780 vcov(m00, model=\"sta\") #>             (Intercept)         x1 #> (Intercept)  0.06115389 0.05059639 #> x1           0.05059639 0.07525105 vcov(m00, model=\"det\") #>             (Intercept)         x1         x3 #> (Intercept)  1.03655409 0.02910525 0.42897959 #> x1           0.02910525 0.42595958 0.06620209 #> x3           0.42897959 0.06620209 0.21295780 ## confidence intervals confint(m00) #>                       2.5%     97.5% #> sta_(Intercept) -0.6169815 0.3523898 #> sta_x1          -0.3424914 0.7328203 #> det_(Intercept) -0.2796054 3.7113243 #> det_x1          -2.0818816 0.4764821 #> det_x3          -0.2221399 1.5868030 confint(m00, model=\"sta\") #>                   2.5%     97.5% #> (Intercept) -0.6169815 0.3523898 #> x1          -0.3424914 0.7328203 confint(m00, model=\"det\") #>                   2.5%     97.5% #> (Intercept) -0.2796054 3.7113243 #> x1          -2.0818816 0.4764821 #> x3          -0.2221399 1.5868030  ## fitted values ## (conditional probability of occurrence given detection history: ## if W=1, fitted=1, ## if W=0, fitted=(phi*(1-delta)) / ((1-delta) + phi * (1-delta)) summary(fitted(m00)) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.01269 0.17830 0.43880 0.58491 1.00000 1.00000  ## estimated probabilities: (phi*(1-delta)) / ((1-delta) + phi * (1-delta)) summary(m00$estimated.probabilities) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.01269 0.10232 0.17443 0.19693 0.27211 0.57908  ## probability of occurrence (phi) summary(m00$occurrence.probabilities) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.5137  0.5494  0.5850  0.5849  0.6206  0.6551  ## probability of detection (delta) summary(m00$detection.probabilities) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.2468  0.7581  0.8493  0.8200  0.9084  0.9887   if (FALSE) { # \\dontrun{ ## model selection m02 <- svocc(W ~ x1 | x3 + x4, datocc) m03 <- drop1(m02, model=\"det\") ## dropping one term at a time, resulting change in AIC m03 ## updating the model m04 <- update(m02, . ~ . | . - x4) m04 ## automatic model selection ## part of the model (sta/det) must be specified m05 <- svocc.step(m02, model=\"det\") summary(m05)  ## nonparametric bootstrap m06 <- bootstrap(m01, B=25) attr(m06, \"bootstrap\") extractBOOT(m06) summary(m06, type=\"mle\") summary(m06, type=\"pmle\") ## no SEs! PMLE!!! summary(m06, type=\"boot\") ## vcov #vcov(m06, type=\"mle\") ## this does not work with PMLE vcov(m06, type=\"boot\") ## this works ## confint confint(m06, type=\"boot\") ## quantile based  ## parametric bootstrap ## sthis is how observations are simulated head(simulate(m01, 5)) m07 <- bootstrap(m01, B=25, type=\"param\") extractBOOT(m07) summary(m07)  data(oven) ovenc <- oven ovenc[, c(4:8,10:11)][] <- lapply(ovenc[, c(4:8,10:11)], scale) ovenc$count01 <- ifelse(ovenc$count > 0, 1, 0) moven <- svocc(count01 ~ pforest | julian + timeday, ovenc) summary(moven) drop1(moven, model=\"det\") moven2 <- update(moven, . ~ . | . - timeday) summary(moven)  BIC(moven, moven2) AUC(moven, moven2) rocplot(moven) rocplot(moven2, col=2, add=TRUE) } # }"},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-05-0-may-21-2024","dir":"Changelog","previous_headings":"","what":"Version 0.5-0, May 21, 2024","title":"Version 0.5-0, May 21, 2024","text":"Use Authors@R field DESCRIPTION. Updated documentation. Added SQPAD approach: see ?sqpad. Added new data sets: paired, josm.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-6-march-8-2023","dir":"Changelog","previous_headings":"","what":"Version 0.4-6, March 8, 2023","title":"Version 0.4-6, March 8, 2023","text":"CRAN release: 2023-03-08 CRAN alert fixed: internal update.formula.svisit renamed update_formula_svisit (#9). Maintainer email changed personal email.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-5-november-7-2022","dir":"Changelog","previous_headings":"","what":"Version 0.4-5, November 7, 2022","title":"Version 0.4-5, November 7, 2022","text":"CRAN release: 2022-11-07 Documentation updates (#8).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-4-august-12-2020","dir":"Changelog","previous_headings":"","what":"Version 0.4-4, August 12, 2020","title":"Version 0.4-4, August 12, 2020","text":"CRAN release: 2020-08-12 Using fully specified URLs DESCRIPTION per CRAN request.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-3-august-11-2020","dir":"Changelog","previous_headings":"","what":"Version 0.4-3, August 11, 2020","title":"Version 0.4-3, August 11, 2020","text":"Namespace issue fixed scocc.fit extractMLE (#6). Adding na.rm=TRUE cmulti avoid issues optimize interval.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-2-august-29-2018","dir":"Changelog","previous_headings":"","what":"Version 0.4-2, August 29, 2018","title":"Version 0.4-2, August 29, 2018","text":"CRAN release: 2018-08-30 Updated documentation, references.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-1-january-30-2018","dir":"Changelog","previous_headings":"","what":"Version 0.4-1, January 30, 2018","title":"Version 0.4-1, January 30, 2018","text":"CRAN release: 2018-01-31 Denes et al. 2017 paper added documentation. inst/ChangeLog removed replaced NEWS.md. cmulti models now predict method, see examples. \"fmix\"” model type time varying rates added cmulti models.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-04-0-march-2-2016","dir":"Changelog","previous_headings":"","what":"Version 0.4-0, March 2, 2016","title":"Version 0.4-0, March 2, 2016","text":"CRAN release: 2016-03-03 load_BAM_QPAD function deprecated (migrated QPAD package). hbootindex bugfix: sample() behaviour length(x) == 1 recognized resampling length 1 vector. pbapply package now dependency. Various minor fixes satisfy R-devel checks. Negative Binomial option added svabu. cmulti returns correct nobs (nonzero total counts).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-03-2-may-15-2014","dir":"Changelog","previous_headings":"","what":"Version 0.3-2, May 15, 2014","title":"Version 0.3-2, May 15, 2014","text":"CRAN release: 2014-05-16 Bugfix cmulti2.fit: n undefined (reported Julie Hart). Bugfix hbootindex: n set strata missing. Documentation fixes (comma separated lists variable names inside \\code).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-03-1-sept-25-2013","dir":"Changelog","previous_headings":"","what":"Version 0.3-1, Sept 25, 2013","title":"Version 0.3-1, Sept 25, 2013","text":"CRAN release: 2013-10-26 hbootindex: routine improved, now uses weights proportional groups sizes. Cleanup satisfy R 3.0.2 check: remove :::. Bugfix: svocc returned k=1 object irrespective n.clones option settings MLE method = \"dc\". Help page added internal objects (e.g. cmulti.fit0). drop.scope.svisit longer treated method drop.scope generic.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-03-0-july-29-2013","dir":"Changelog","previous_headings":"","what":"Version 0.3-0, July 29, 2013","title":"Version 0.3-0, July 29, 2013","text":"CRAN release: 2013-07-30 jags.engine removed, replaced dcmle dependency. dFormula checkDesign added Formula dependency, replace old svisitFormula interface allow handling complex designs. logdmultinom: simplified version dmultinom. bymethod: collapses (pools) observations methodology. cmulti: new function conditional multinomial estimation. load_BAM_QPAD: new function load BAM QPAD parameter estimates support functions. hbootindex: new function sample indices replacement grouped/stratified data. fitted.cmulti added: get estimated singing rate distance model parameter (available type = \"mix\") predict methods: response (lhs) dropped formula newdata provided.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-02-2-may-2-2012","dir":"Changelog","previous_headings":"","what":"Version 0.2-2, May 2, 2012","title":"Version 0.2-2, May 2, 2012","text":"CRAN release: 2012-05-03 inst/COPYING file removed (standard license).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-02-1-november-25-2011","dir":"Changelog","previous_headings":"","what":"Version 0.2-1, November 25, 2011","title":"Version 0.2-1, November 25, 2011","text":"CRAN release: 2011-11-26 Help pages edited.","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-02-0-october-18-2011","dir":"Changelog","previous_headings":"","what":"Version 0.2-0, October 18, 2011","title":"Version 0.2-0, October 18, 2011","text":"CRAN release: 2011-10-19 svabu related functions added. summary: nobs returned NULL, AIC printed. Now fixed. R (>= 2.13.0) added DESCRIPTION (reported Uwe Ligges).","code":""},{"path":"https://peter.solymos.org/detec/news/index.html","id":"version-01-0-september-27-2011","dir":"Changelog","previous_headings":"","what":"Version 0.1-0, September 27, 2011","title":"Version 0.1-0, September 27, 2011","text":"CRAN release: 2011-09-29 First public release CRAN.","code":""}]
